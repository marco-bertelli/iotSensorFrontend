{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/button-toggle.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/datepicker.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","webpack:///src/app/pages/forms/buttons/buttons.component.html","webpack:///src/app/pages/forms/buttons/buttons.component.ts","webpack:///src/app/pages/forms/buttons/material-buttons/material-buttons.component.ts","webpack:///src/app/pages/forms/buttons/material-buttons/material-buttons.component.html","webpack:///src/app/pages/forms/datepicker/datepicker.component.ts","webpack:///src/app/pages/forms/datepicker/datepicker.component.html","webpack:///src/app/pages/forms/form-inputs/form-inputs.component.html","webpack:///src/app/pages/forms/form-inputs/form-inputs.component.ts","webpack:///src/app/pages/forms/form-inputs/material-inputs/material-inputs.component.ts","webpack:///src/app/pages/forms/form-inputs/material-inputs/material-inputs.component.html","webpack:///src/app/pages/forms/form-layouts/form-layouts.component.ts","webpack:///src/app/pages/forms/form-layouts/form-layouts.component.html","webpack:///src/app/pages/forms/forms-routing.module.ts","webpack:///src/app/pages/forms/forms.component.ts","webpack:///src/app/pages/forms/forms.module.ts"],"names":["listenerOptions","normalizePassiveListenerOptions","passive","AutofillMonitor","_platform","_ngZone","_monitoredElements","Map","elementOrRef","isBrowser","EMPTY","element","coerceElement","info","get","subject","result","Subject","cssClass","listener","event","animationName","classList","contains","add","run","next","target","isAutofilled","remove","runOutsideAngular","addEventListener","set","unlisten","removeEventListener","complete","forEach","_info","stopMonitoring","ɵfac","AutofillMonitor_Factory","t","ɵprov","factory","token","providedIn","ctorParameters","type","Platform","NgZone","ngDevMode","Injectable","args","CdkAutofill","_elementRef","_autofillMonitor","cdkAutofill","EventEmitter","monitor","subscribe","emit","CdkAutofill_Factory","ɵdir","selectors","outputs","ElementRef","propDecorators","Output","Directive","selector","CdkTextareaAutosize","document","_destroyed","_enabled","_previousMinRows","_isViewInited","_document","_textareaElement","nativeElement","_measuringClass","FIREFOX","_minRows","value","coerceNumberProperty","_setMinHeight","_maxRows","_setMaxHeight","coerceBooleanProperty","resizeToFitContent","reset","placeholder","_cachedPlaceholderHeight","undefined","_cacheTextareaPlaceholderHeight","minHeight","minRows","_cachedLineHeight","style","maxHeight","maxRows","_initialHeight","height","window","_getWindow","fromEvent","pipe","auditTime","takeUntil","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","parentNode","appendChild","clientHeight","removeChild","scrollHeight","_measureScrollHeight","force","_cacheTextareaLineHeight","textarea","_previousValue","Math","max","requestAnimationFrame","_scrollToCaretPosition","setTimeout","doc","_getDocument","defaultView","selectionStart","selectionEnd","isStopped","activeElement","setSelectionRange","CdkTextareaAutosize_Factory","DOCUMENT","hostAttrs","hostBindings","CdkTextareaAutosize_HostBindings","rf","ctx","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","inputs","enabled","exportAs","decorators","Optional","Inject","Input","HostListener","host","TextFieldModule","TextFieldModule_Factory","ɵmod","ɵinj","imports","PlatformModule","NgModule","declarations","exports","ngJitMode","_c0","_c1","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","InjectionToken","MAT_BUTTON_TOGGLE_GROUP","MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatButtonToggleGroup","multi","uniqueIdCounter","MatButtonToggleChange","source","_changeDetector","defaultOptions","_vertical","_multiple","_disabled","_controlValueAccessorChangeFn","_onTouched","_name","valueChange","change","appearance","_buttonToggles","toggle","name","_markForCheck","selected","_selectionModel","multiple","map","newValue","_setSelectionByValue","SelectionModel","select","filter","checked","markForCheck","fn","isDisabled","disabled","Array","isArray","length","isUserInput","deferEvents","deselect","Promise","resolve","then","_updateModelValue","isSelected","_rawValue","some","Error","_clearSelection","currentValue","_selectValue","clear","correspondingOption","find","_emitChangeEvent","MatButtonToggleGroup_Factory","contentQueries","MatButtonToggleGroup_ContentQueries","dirIndex","MatButtonToggle","_t","hostVars","MatButtonToggleGroup_HostBindings","vertical","features","ChangeDetectorRef","ContentChildren","descendants","providers","_MatButtonToggleBase","mixinDisableRipple","toggleGroup","_changeDetectorRef","_focusMonitor","defaultTabIndex","_isSingleSelector","_checked","ariaLabelledby","parsedTabIndex","Number","tabIndex","buttonToggleGroup","id","_appearance","_isSelected","_syncButtonToggle","group","_isPrechecked","options","_buttonElement","focus","newChecked","MatButtonToggle_Factory","ɵcmp","viewQuery","MatButtonToggle_Query","first","MatButtonToggle_HostBindings","MatButtonToggle_focus_HostBindingHandler","disableRipple","ariaLabel","ngContentSelectors","decls","vars","consts","template","MatButtonToggle_Template","MatButtonToggle_Template_button_click_0_listener","_onButtonClick","_r0","buttonId","directives","styles","encapsulation","changeDetection","FocusMonitor","String","Attribute","ViewChild","Component","ViewEncapsulation","ChangeDetectionStrategy","MatButtonToggleModule","MatButtonToggleModule_Factory","MatCommonModule","MatRippleModule","_c2","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","_MatButtonBase","mixinColor","mixinDisabled","MatButton","elementRef","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","attr","_getHostElement","color","origin","focusVia","attributes","attribute","hasAttribute","MatButton_Factory","ANIMATION_MODULE_TYPE","MatButton_Query","MatRipple","ripple","MatButton_HostBindings","attrs","MatButton_Template","_isRippleDisabled","MatAnchor","focusMonitor","animationMode","preventDefault","stopImmediatePropagation","MatAnchor_Factory","MatAnchor_HostBindings","MatAnchor_click_HostBindingHandler","$event","_haltDisabledEvents","toString","MatAnchor_Template","MatButtonModule","MatButtonModule_Factory","a0","enterDuration","MAT_CHECKBOX_DEFAULT_OPTIONS","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","clickAction","nextUniqueId","defaults","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","MatCheckbox","MatCheckboxChange","_MatCheckboxBase","mixinTabIndex","_options","_uniqueId","labelPosition","indeterminateChange","_currentAnimationClass","_currentCheckState","_indeterminate","defaultColor","parseInt","_required","focusOrigin","_syncIndeterminate","changed","_transitionCheckState","detectChanges","indeterminate","newState","oldState","_getAnimationClassForCheckStateTransition","animationClass","_inputElement","_a","stopPropagation","animSuffix","nativeCheckbox","MatCheckbox_Factory","MatCheckbox_Query","MatCheckbox_HostBindings","required","ariaDescribedby","MatCheckbox_Template","MatCheckbox_Template_input_change_3_listener","_onInteractionEvent","MatCheckbox_Template_input_click_3_listener","_onInputClick","MatCheckbox_Template_span_cdkObserveContent_12_listener","_onLabelTextChange","_r2","inputId","textContent","trim","_getAriaChecked","MAT_CHECKBOX_REQUIRED_VALIDATOR","NG_VALIDATORS","MatCheckboxRequiredValidator","CheckboxRequiredValidator","ɵMatCheckboxRequiredValidator_BaseFactory","MatCheckboxRequiredValidator_Factory","_MatCheckboxRequiredValidatorModule","_MatCheckboxRequiredValidatorModule_Factory","MatCheckboxModule","MatCheckboxModule_Factory","ObserversModule","MatCalendarBody_tr_0_Template","ctx_r0","_cellPadding","numCols","label","MatCalendarBody_tr_1_td_1_Template","ctx_r4","_firstRowOffset","labelMinRequiredCells","MatCalendarBody_tr_1_td_2_Template","_r9","MatCalendarBody_tr_1_td_2_Template_td_click_0_listener","restoredCtx","item_r6","$implicit","ctx_r8","_cellClicked","colIndex_r7","index","rowIndex_r3","ctx_r5","_cellWidth","_isActiveCell","_isRangeStart","compareValue","_isRangeEnd","_isInRange","_isComparisonBridgeStart","_isComparisonBridgeEnd","_isComparisonStart","_isComparisonEnd","_isInComparisonRange","_isPreviewStart","_isPreviewEnd","_isInPreview","cssClasses","_isComparisonIdentical","todayValue","displayValue","MatCalendarBody_tr_1_Template","row_r2","ctx_r1","MatMonthView_th_3_Template","day_r1","narrow","MatCalendar_ng_template_0_Template","MatCalendar_mat_month_view_2_Template","_r5","MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener","activeDate","MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener","ctx_r6","_dateSelected","dateFilter","maxDate","minDate","dateClass","comparisonStart","comparisonEnd","MatCalendar_mat_year_view_3_Template","_r8","MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener","ctx_r7","MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener","ctx_r9","_monthSelectedInYearView","MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener","ctx_r10","_goToDateInView","ctx_r2","MatCalendar_mat_multi_year_view_4_Template","_r12","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener","ctx_r11","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener","ctx_r13","_yearSelectedInMultiYearView","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener","ctx_r14","ctx_r3","MatDatepickerContent_ng_template_2_Template","MatDatepickerToggle__svg_svg_2_Template","_c3","_c4","_c5","_c6","MatDatepickerActions_ng_template_0_Template","createMissingDateImplError","provider","MatDatepickerIntl","changes","calendarLabel","openCalendarLabel","closeCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","start","end","MatDatepickerIntl_Factory","MatCalendarCell","rawValue","MatCalendarBody","activeCell","isRange","cellAspectRatio","previewStart","previewEnd","selectedValueChange","previewChange","_enterHandler","_skipNextFocus","cell","_getCellFromElement","_leaveHandler","isTableCell","startValue","endValue","columnChanges","rowIndex","colIndex","cellNumber","movePreview","onStable","take","querySelector","isStart","isEnd","isInRange","previousCell","previousRow","nextCell","nextRow","row","getAttribute","col","MatCalendarBody_Factory","MatCalendarBody_Template","node","nodeName","rangeEnabled","DateRange","MatDateSelectionModel","selection","_adapter","_selectionChanged","selectionChanged","oldValue","date","isDateInstance","isValid","MatDateSelectionModel_Factory","DateAdapter","MatSingleDateSelectionModel","adapter","_isValidDateInstance","clone","updateSelection","MatSingleDateSelectionModel_Factory","MatRangeDateSelectionModel","compareDate","MatRangeDateSelectionModel_Factory","MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY","parent","MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER","deps","SkipSelf","useFactory","MAT_RANGE_DATE_SELECTION_MODEL_FACTORY","MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER","MAT_DATE_RANGE_SELECTION_STRATEGY","DefaultMatCalendarRangeStrategy","_dateAdapter","currentRange","DefaultMatCalendarRangeStrategy_Factory","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER","DAYS_PER_WEEK","MatMonthView","_dateFormats","_dir","_rangeStrategy","_rerenderSubscription","Subscription","selectedChange","_userSelection","activeDateChange","_activeDate","today","oldActiveDate","validDate","getValidDateOrNull","deserialize","clampDate","_hasSameMonthAndYear","_init","_selected","_setRanges","_minDate","_maxDate","localeChanges","startWith","comparisonChange","firstChange","unsubscribe","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","rangeStartDate","rangeEndDate","_getDateInCurrentMonth","_previewStart","_previewEnd","isRtl","_isRtl","keyCode","LEFT_ARROW","addCalendarDays","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","HOME","getDate","END","getNumDaysInMonth","PAGE_UP","altKey","addCalendarYears","addCalendarMonths","PAGE_DOWN","ENTER","SPACE","ESCAPE","hasModifierKey","_focusActiveCell","_todayDate","_getCellCompareValue","_monthLabel","display","monthLabel","format","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","previewRange","createPreview","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","i","_weekdays","slice","concat","daysInMonth","dateNames","getDateNames","_weeks","push","_shouldEnableDate","dateA11yLabel","cellClasses","d1","d2","year","month","day","Date","getTime","selectedValue","_rangeStart","_rangeEnd","_isRange","_comparisonRangeStart","_comparisonRangeEnd","MatMonthView_Factory","MAT_DATE_FORMATS","MatMonthView_Query","MatMonthView_Template","MatMonthView_Template_tbody_selectedValueChange_6_listener","MatMonthView_Template_tbody_previewChange_6_listener","_previewChanged","MatMonthView_Template_tbody_keydown_6_listener","_handleCalendarBodyKeydown","Directionality","yearsPerPage","yearsPerRow","MatMultiYearView","yearSelected","isSameMultiYearView","_setSelectedYear","_todayYear","activeYear","minYearOfPage","getActiveOffset","_years","_createCellForYear","min","_yearSelected","yearName","getYearName","_shouldEnableYear","firstOfYear","_selectedYear","MatMultiYearView_Factory","MatMultiYearView_Query","MatMultiYearView_Template","MatMultiYearView_Template_tbody_selectedValueChange_4_listener","MatMultiYearView_Template_tbody_keydown_4_listener","_getActiveCell","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","floor","euclideanModulo","maxYear","a","b","MatYearView","monthSelected","_setSelectedMonth","normalizedDate","_monthSelected","_todayMonth","_getMonthInCurrentYear","_yearLabel","monthNames","_months","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxMonth","minYear","minMonth","_selectedMonth","MatYearView_Factory","MatYearView_Query","MatYearView_Template","MatYearView_Template_tbody_selectedValueChange_4_listener","MatYearView_Template_tbody_keydown_4_listener","uniqueId","MatCalendarHeader","_intl","calendar","changeDetectorRef","_buttonDescriptionId","stateChanges","currentView","monthYearLabel","maxYearOfPage","minYearName","maxYearName","formatYearRange","_isSameView","MatCalendarHeader_Factory","MatCalendar","MatCalendarHeader_Template","MatCalendarHeader_Template_button_click_2_listener","currentPeriodClicked","MatCalendarHeader_Template_button_click_8_listener","previousClicked","MatCalendarHeader_Template_button_click_9_listener","nextClicked","periodButtonLabel","periodButtonText","previousEnabled","prevButtonLabel","nextEnabled","nextButtonLabel","_moveFocusOnNextTick","startView","viewChanged","_intlChanges","_startAt","_clampedActiveDate","_currentView","viewChangedResult","_calendarHeaderPortal","ComponentPortal","headerComponent","startAt","focusActiveCell","view","_getCurrentViewComponent","sameDate","normalizedYear","normalizedMonth","monthView","yearView","multiYearView","MatCalendar_Factory","MatCalendar_Query","MatCalendar_Template","matDatepickerAnimations","transformPanel","trigger","transition","animate","keyframes","opacity","transform","fadeInCalendar","state","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","Overlay","_MatDatepickerContentBase","MatDatepickerContent","_globalModel","_rangeSelectionStrategy","intl","_subscriptions","_animationDone","_actionsPortal","_closeButtonText","_model","_animationState","datepicker","touchUi","_calendar","newSelection","selectionFinished","isComplete","close","MatDatepickerContent_Factory","MatDatepickerContent_Query","MatDatepickerContent_HostBindings","MatDatepickerContent_animation_transformPanel_done_HostBindingHandler","MatDatepickerContent_Template","MatDatepickerContent_Template_mat_calendar_yearSelected_1_listener","_selectYear","MatDatepickerContent_Template_mat_calendar_monthSelected_1_listener","_selectMonth","MatDatepickerContent_Template_mat_calendar_viewChanged_1_listener","_viewChanged","MatDatepickerContent_Template_mat_calendar__userSelection_1_listener","_handleUserSelection","MatDatepickerContent_Template_button_focus_3_listener","_closeButtonFocused","MatDatepickerContent_Template_button_blur_3_listener","MatDatepickerContent_Template_button_click_3_listener","panelClass","_getMinDate","_getMaxDate","_getDateFilter","calendarHeaderComponent","_getSelected","data","animation","animations","MatDatepickerBase","_dialog","_overlay","_viewContainerRef","scrollStrategy","_inputStateChanges","_touchUi","xPosition","yPosition","_restoreFocus","openedStream","closedStream","_opened","_focusedElementBeforeOpen","_backdropHarnessClass","_scrollStrategy","datepickerInput","getStartValue","_color","getThemePalette","_panelClass","coerceStringArray","open","positionChange","_overlayRef","positionStrategy","getConfig","FlexibleConnectedPositionStrategy","_setConnectedPositions","opened","updatePosition","_destroyOverlay","input","portal","_getFocusedElementPierceShadowDom","_openOverlay","_componentRef","instance","_startExitAnimation","completeClose","_b","_applyPendingSelection","isDialog","labelId","getOverlayLabelId","overlayRef","create","OverlayConfig","_getDialogStrategy","_getDropdownStrategy","hasBackdrop","backdropClass","direction","block","overlayElement","setAttribute","_getCloseStream","attach","_forwardContentValues","dispose","global","centerHorizontally","centerVertically","strategy","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","primaryX","secondaryX","primaryY","secondaryY","withPositions","originX","originY","overlayX","overlayY","merge","backdropClick","detachments","keydownEvents","MatDatepickerBase_Factory","restoreFocus","ViewContainerRef","MatDatepicker","ɵMatDatepicker_BaseFactory","MatDatepicker_Factory","MatDatepicker_Template","MatDatepickerInputEvent","targetElement","MatDatepickerInputBase","dateChange","dateInput","_validatorOnChange","_cvaOnChange","_valueChangesSubscription","_localeSubscription","_parseValidator","_lastValueValid","_filterValidator","control","controlValue","_matchesFilter","_minValidator","_maxValidator","_assignValueProgrammatically","_getValueFromModel","_pendingValue","_parentDisabled","_isInitialized","blur","model","_assignValue","_shouldHandleChangeEvent","_isValidValue","_formatValue","dateInputsHaveChanged","c","_validator","isAltDownArrow","readOnly","_openPopup","lastValueWasValid","parse","_assignValueToModel","MatDatepickerInputBase_Factory","keys","Object","key","previousValue","MAT_DATEPICKER_VALUE_ACCESSOR","MatDatepickerInput","MAT_DATEPICKER_VALIDATORS","dateFormats","_formField","_closedSubscription","Validators","_datepicker","_registerModel","registerInput","_min","validValue","_max","_dateFilter","wasMatchingValue","getLabelId","modelValue","MatDatepickerInput_Factory","MAT_FORM_FIELD","MatDatepickerInput_HostBindings","MatDatepickerInput_input_HostBindingHandler","_onInput","MatDatepickerInput_change_HostBindingHandler","_onChange","MatDatepickerInput_blur_HostBindingHandler","_onBlur","MatDatepickerInput_keydown_HostBindingHandler","_onKeydown","toIso8601","matDatepicker","MAT_INPUT_VALUE_ACCESSOR","MatFormField","MatDatepickerToggleIcon","MatDatepickerToggleIcon_Factory","MatDatepickerToggle","_stateChanges","_watchStateChanges","datepickerStateChanged","of","inputStateChanged","datepickerToggled","MatDatepickerToggle_Factory","MatDatepickerToggle_ContentQueries","_customIcon","MatDatepickerToggle_Query","_button","MatDatepickerToggle_HostBindings","MatDatepickerToggle_click_HostBindingHandler","_open","MatDatepickerToggle_Template","ContentChild","MAT_DATE_RANGE_INPUT_PARENT","MatDateRangeInputPartBase","_rangeInput","_defaultErrorStateMatcher","_injector","_parentForm","_parentFormGroup","ngControl","NgControl","InjectFlags","updateErrorState","_handleChildValueChange","_openDatepicker","_groupDisabled","_startInput","_endInput","opposite","MatDateRangeInputPartBase_Factory","ErrorStateMatcher","Injector","NgForm","FormGroupDirective","_MatDateRangeInputBase","mixinErrorState","MatStartDate","rangeInput","defaultErrorStateMatcher","injector","parentForm","parentFormGroup","_startValidator","range","MatStartDate_Factory","MatStartDate_HostBindings","MatStartDate_input_HostBindingHandler","MatStartDate_change_HostBindingHandler","MatStartDate_keydown_HostBindingHandler","MatStartDate_blur_HostBindingHandler","rangePicker","errorStateMatcher","MatEndDate","_endValidator","BACKSPACE","MatEndDate_Factory","MatEndDate_HostBindings","MatEndDate_input_HostBindingHandler","MatEndDate_change_HostBindingHandler","MatEndDate_keydown_HostBindingHandler","MatEndDate_blur_HostBindingHandler","MatDateRangeInput","focused","controlType","_ariaDescribedBy","separator","empty","_getPlaceholder","_rangePicker","wasMatchingStart","wasMatchingEnd","_revalidate","errorState","startEmpty","isEmpty","endEmpty","ids","join","getMirrorValue","_shouldLabelFloat","formField","_hasFloatingLabel","_labelId","MatDateRangeInput_Factory","MatDateRangeInput_ContentQueries","MatDateRangeInput_HostBindings","_getAriaLabelledby","_shouldHidePlaceholders","MatFormFieldControl","MatDateRangeInput_Template","MatDateRangeInput_Template_div_cdkFocusChange_0_listener","_updateFocus","_getInputMirrorValue","_shouldHideSeparator","ControlContainer","Self","MatDateRangePicker","ɵMatDateRangePicker_BaseFactory","MatDateRangePicker_Factory","MatDateRangePicker_Template","MatDatepickerApply","MatDatepickerApply_Factory","MatDatepickerApply_HostBindings","MatDatepickerApply_click_HostBindingHandler","_applySelection","MatDatepickerCancel","MatDatepickerCancel_Factory","MatDatepickerCancel_HostBindings","MatDatepickerCancel_click_HostBindingHandler","MatDatepickerActions","_portal","TemplatePortal","_template","registerActions","removeActions","isAttached","detach","MatDatepickerActions_Factory","MatDatepickerActions_Query","TemplateRef","MatDatepickerActions_Template","MatDatepickerModule","MatDatepickerModule_Factory","CommonModule","OverlayModule","A11yModule","PortalModule","CdkScrollableModule","entryComponents","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","_control","MatFormField_label_9_ng_content_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","updateOutlineGap","_shouldAlwaysFloat","_hasLabel","hideRequiredMarker","MatFormField_div_10_Template","MatFormField_div_11_Template","MatFormField_div_13_Template","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","nextUniqueId$2","MAT_ERROR","MatError","ariaLive","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","_MAT_HINT","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MAT_PREFIX","MatPrefix","MatPrefix_Factory","MAT_SUFFIX","MatSuffix","MatSuffix_Factory","floatingLabelScale","outlineGapPadding","_MatFormFieldBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","_labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_processHints","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_connectionContainerRef","_validateControlChild","_validatePlaceholders","_syncDescribedByIds","valueChanges","_prefixChildren","_suffixChildren","_hintChildren","_errorChildren","prop","_placeholderChild","_labelChildNonStatic","_labelChildStatic","_canLabelFloat","shouldLabelFloat","_hasPlaceholder","_label","_validateHints","startHint","endHint","hint","userAriaDescribedBy","split","_getDisplayedMessages","error","setDescribedByIds","labelEl","children","_isAttachedToDOM","startWidth","gapWidth","container","startEls","querySelectorAll","gapEls","containerRect","getBoundingClientRect","width","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","offsetWidth","abs","rect","right","left","getRootNode","rootNode","documentElement","MatFormField_Factory","MatFormField_ContentQueries","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","onContainerClick","MatFormFieldModule","MatFormFieldModule_Factory","MatTextareaAutosize","ɵMatTextareaAutosize_BaseFactory","MatTextareaAutosize_Factory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_INVALID_TYPES","_MatInputBase","MatInput","inputValueAccessor","ngZone","_uid","_type","_readonly","_neverEmptyInputTypes","getSupportedInputTypes","has","toLowerCase","_inputValueAccessor","_previousNativeValue","IOS","el","_isServer","_isNativeSelect","_isTextarea","_isInFormField","_id","_validateType","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","isFocused","readonly","call","_previousPlaceholder","removeAttribute","indexOf","validity","badInput","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","MatInput_Factory","MatInput_HostBindings","MatInput_focus_HostBindingHandler","_focusChanged","MatInput_blur_HostBindingHandler","MatInput_input_HostBindingHandler","MatInputModule","MatInputModule_Factory","MAT_RADIO_DEFAULT_OPTIONS","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MatRadioGroup","MatRadioChange","MAT_RADIO_GROUP","_MatRadioGroupBase","_value","_labelPosition","onTouched","_updateRadioButtonNames","v","_markRadiosForCheck","_updateSelectedRadioFromValue","_checkSelectedRadioButton","_radios","radio","isAlreadySelected","_MatRadioGroupBase_Factory","ɵMatRadioGroup_BaseFactory","MatRadioGroup_Factory","MatRadioGroup_ContentQueries","MatRadioButton","MatRadioButtonBase","_MatRadioButtonMixinBase","_MatRadioButtonBase","radioGroup","_radioDispatcher","_providerOverride","_removeUniqueSelectionListener","_noopAnimations","listen","newCheckedState","notify","_setDisabled","_touch","groupValueChanged","_MatRadioButtonBase_Factory","_MatRadioButtonBase_Query","UniqueSelectionDispatcher","changeDetector","radioDispatcher","providerOverride","MatRadioButton_Factory","MatRadioButton_HostBindings","MatRadioButton_focus_HostBindingHandler","MatRadioButton_Template","MatRadioButton_Template_input_change_5_listener","_onInputInteraction","MatRadioButton_Template_input_click_5_listener","MatRadioModule","MatRadioModule_Factory","MatSelect_span_4_Template","MatSelect_span_5_span_1_Template","triggerValue","MatSelect_span_5_ng_content_2_Template","MatSelect_span_5_Template","customTrigger","MatSelect_ng_template_8_Template","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","_panelDoneAnimatingStream","toState","MatSelect_ng_template_8_Template_div_keydown_1_listener","_handleKeydown","_getPanelTheme","_transformOrigin","_triggerFontSize","_getPanelAriaLabelledby","matSelectAnimations","transformPanelWrap","query","animateChild","optional","minWidth","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","_MatSelectMixinBase","MAT_SELECT_TRIGGER","MatSelectTrigger","MatSelectTrigger_Factory","_MatSelectBase","_viewportRuler","_parentFormField","scrollStrategyFactory","_liveAnnouncer","_defaultOptions","_c","_panelOpen","_compareWith","o1","o2","_triggerAriaLabelledBy","_destroy","_valueId","_overlayPanelClass","overlayPanelClass","_focused","_disableOptionCentering","disableOptionCentering","optionSelectionChanges","defer","switchMap","option","onSelectionChange","openedChange","_openedStream","o","_closedStream","selectionChange","valueAccessor","typeaheadDebounceInterval","_typeaheadDebounceInterval","_scrollStrategyFactory","_placeholder","_initializeSelection","distinctUntilChanged","_panelDoneAnimating","panelOpen","_initKeyManager","added","removed","_resetOptions","newAriaLabelledby","_getTriggerAriaLabelledby","_keyManager","withTypeAhead","_canOpen","withHorizontalOrientation","_highlightCorrectOption","selectedOptions","viewValue","reverse","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","manager","isTyping","previouslySelectedOption","onKeydown","selectedOption","announce","activeItem","_selectViaInteraction","A","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","_overlayDir","_positioningSettled","setInactiveStyles","_sortValues","updateActiveItem","console","warn","ActiveDescendantKeyManager","withVerticalOrientation","withHomeAndEnd","withAllowedModifierKeys","tabOut","panel","_scrollOptionIntoView","changedOrDestroyed","_onSelect","wasSelected","_propagateChanges","setActiveItem","toArray","sort","sortComparator","fallbackValue","valueToEmit","_getChangeEvent","setFirstItemActive","labelExpression","isOpen","_ariaDescribedby","_MatSelectBase_Factory","_MatSelectBase_Query","CdkConnectedOverlay","compareWith","ViewportRuler","LiveAnnouncer","MatSelect","arguments","_scrollTop","_offsetY","_positions","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","_triggerRect","getComputedStyle","fontSize","_calculateOverlayPosition","labelCount","_countGroupLabelsBeforeOption","optionGroups","scrollTop","_getOptionScrollPosition","_calculateOverlayOffsetX","offsetX","overlayRect","viewportSize","getViewportSize","paddingWidth","leftOverflow","rightOverflow","round","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","_getItemCount","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","top","bottomSpaceAvailable","bottom","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","items","panelHeight","scrollContainerHeight","selectedOptionOffset","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","ɵMatSelect_BaseFactory","MatSelect_Factory","MatSelect_ContentQueries","MatOption","MAT_OPTGROUP","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","_onFocus","MatSelect_blur_HostBindingHandler","_getAriaActiveDescendant","MAT_OPTION_PARENT_COMPONENT","MatSelect_Template","MatSelect_Template_div_click_0_listener","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","MatSelectModule","MatSelectModule_Factory","MatOptionModule","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","disableToggleValue","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","MatSlideToggleChange","_MatSlideToggleBase","_","toggleChange","MatSlideToggle_Factory","MatSlideToggle_Query","_thumbEl","_thumbBarEl","MatSlideToggle_HostBindings","MatSlideToggle_Template","MatSlideToggle_Template_input_change_4_listener","_onChangeEvent","MatSlideToggle_Template_input_click_4_listener","MatSlideToggle_Template_span_cdkObserveContent_11_listener","_r4","MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR","MatSlideToggleRequiredValidator","ɵMatSlideToggleRequiredValidator_BaseFactory","MatSlideToggleRequiredValidator_Factory","_MatSlideToggleRequiredValidatorModule","_MatSlideToggleRequiredValidatorModule_Factory","MatSlideToggleModule","MatSlideToggleModule_Factory","ButtonsComponent","themeService","statuses","shapes","sizes","materialTheme$","onThemeChange","theme","themeName","startsWith","MaterialButtonsComponent","DatepickerComponent","dateService","addDay","FormInputsComponent","starRate","heartRate","radioGroupValue","showMaterialInputs","tap","MaterialInputsComponent","FormLayoutsComponent","routes","path","component","FormsComponent","FormsRoutingModule","RouterModule","materialModules","MatNativeDateModule","FormsModule","ThemeModule","NbInputModule","NbCardModule","NbButtonModule","NbActionsModule","NbUserModule","NbCheckboxModule","NbRadioModule","NbDatepickerModule","NbSelectModule","NbIconModule"],"mappings":"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AAQ;;AAC1E;;AACE;;AACF;;AACF;;AACA;;AACE;;AAA8B;;AAAM;;AACpC;;AACE;;AACE;;AAAU;;AAAQ;;AAClB;;AAAU;;AAAQ;;AAClB;;AAAmB;;AAAe;;AACpC;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAgD;;AAAO;;AACzD;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAAgB;;AAAmB;;AACnC;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AAAgD;;AAAI;;AACtD;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAAgB;;AAAU;;AAC1B;;AACE;;AACE;;AACE;;AAA8C;;AAAa;;AAC3D;;AACF;;AACA;;AACE;;AAAiD;;AAAQ;;AACzD;;AACF;;AACA;;AACE;;AAAa;;AAAY;;AAC3B;;AACA;;AAA+C;;AAAM;;AACvD;;AACF;;AACF;;AAEA;;AACE;;AAAgB;;AAAU;;AAC1B;;AACE;;AACE;;AACE;;AACE;;AAA0C;;AAAU;;AACpD;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAyC;;AAAS;;AAClD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAsC;;AAAK;;AAC3C;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAwC;;AAAO;;AAC/C;;AACF;;AACF;;AACF;;AACA;;AAA+B;;AAAM;;AACvC;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAgB;;AAAe;;AAC/B;;AACE;;AACE;;AACE;;AAAmE;;AAAK;;AACxE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAsE;;AAAQ;;AAC9E;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAa;;AAAW;;AAC1B;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAgD;;AAAO;;AACzD;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3JA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,8CAAAC,cAFb;AAGEpa,gBAAQ,EAAE,CACR;AACEka,cAAI,EAAE,QADR;AAEEC,mBAAS,EAAE,gEAAAV;AAFb,SADQ,EAKR;AACES,cAAI,EAAE,SADR;AAEEC,mBAAS,EAAE,kEAAAH;AAFb,SALQ,EASR;AACEE,cAAI,EAAE,SADR;AAEEC,mBAAS,EAAE,kEAAAH;AAFb,SATQ,EAaR;AACEE,cAAI,EAAE,SADR;AAEEC,mBAAS,EAAE,wDAAAxB;AAFb,SAbQ,EAiBR;AACEuB,cAAI,EAAE,YADR;AAEEC,mBAAS,EAAE,8DAAAb;AAFb,SAjBQ;AAHZ,OADqB,CAAvB;;UAqCae,mB;;;;;yBAAAA,mB;AAAkB,O;;;cAAlBA;;;kBAPF,CACP,6CAAAC,YAAA,UAAsBL,MAAtB,CADO,C,EAIP,6CAAAK,Y;;;;4HAGSD,mB,EAAkB;AAAA;AAAA,oBAH3B,6CAAAC,YAG2B;AAAA,S;AAHf,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCnCHF,e;;;;;yBAAAA,e;AAAc,O;;;cAAdA,e;AAAc,0C;AAAA,gB;AAAA,e;AAAA;AAAA;AAHvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC8BJ,UAAMG,eAAe,GAAG,CACtB,0DAAAnY,kBADsB,EAEtB,sDAAAuD,cAFsB,EAGtB,uDAAAkR,eAHsB,EAItB,qDAAA2D,mBAJsB,EAKtB,2DAAAhhB,mBALsB,EAMtB,yDAAArwB,iBANsB,EAOtB,6DAAAsvC,oBAPsB,EAQtB,sDAAA1P,cARsB,EAStB,uDAAA5jC,eATsB,EAUtB,8DAAA7C,qBAVsB,CAAxB;;UAwCam4C,Y;;;;;yBAAAA,Y;AAAW,O;;;cAAXA;;;mBAzBT,iDAAAC,W,EACA,6CAAAC,a,EACA,6CAAAC,Y,EACA,6CAAAC,c,EACA,6CAAAC,e,EACA,6CAAAC,Y,EACA,6CAAAC,gB,EACA,6CAAAC,a,EACA,6CAAAC,kB,EACA,mDAAAb,kB,EACA,6CAAAc,c,EACA,6CAAAC,Y,EACA,wD,SACGb,e;;;;6HAYME,Y,EAAW;AAAA,yBATpB,8CAAAL,cASoB,EARpB,wDAAAzB,gBAQoB,EAPpB,gEAAAc,mBAOoB,EANpB,kEAAAO,oBAMoB,EALpB,8DAAAV,mBAKoB,EAJpB,oFAAAS,uBAIoB,EAHpB,kFAAAV,wBAGoB;AAHI,oBAtBxB,iDAAAqB,WAsBwB,EArBxB,6CAAAC,aAqBwB,EApBxB,6CAAAC,YAoBwB,EAnBxB,6CAAAC,cAmBwB,EAlBxB,6CAAAC,eAkBwB,EAjBxB,6CAAAC,YAiBwB,EAhBxB,6CAAAC,gBAgBwB,EAfxB,6CAAAC,aAewB,EAdxB,6CAAAC,kBAcwB,EAbxB,mDAAAb,kBAawB,EAZxB,6CAAAc,cAYwB,EAXxB,6CAAAC,YAWwB,EAVxB,wDAUwB,EApC1B,0DAAAhZ,kBAoC0B,EAnC1B,sDAAAuD,cAmC0B,EAlC1B,uDAAAkR,eAkC0B,EAjC1B,qDAAA2D,mBAiC0B,EAhC1B,2DAAAhhB,mBAgC0B,EA/B1B,yDAAArwB,iBA+B0B,EA9B1B,6DAAAsvC,oBA8B0B,EA7B1B,sDAAA1P,cA6B0B,EA5B1B,uDAAA5jC,eA4B0B,EA3B1B,8DAAA7C,qBA2B0B;AAGJ,S;AA9BD,O","file":"src_app_pages_forms_forms_module_ts-es5.js","sourcesContent":["import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgZone, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            }\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nAutofillMonitor.ɵprov = i0.ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._isViewInited = false;\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n        this._measuringClass = _platform.FIREFOX ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() { return this._minRows; }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() { return this._maxRows; }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    get placeholder() { return this._textareaElement.placeholder; }\n    set placeholder(value) {\n        this._cachedPlaceholderHeight = undefined;\n        this._textareaElement.placeholder = value;\n        this._cacheTextareaPlaceholderHeight();\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n            });\n            this._isViewInited = true;\n            this.resizeToFitContent(true);\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        this._textareaElement.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        this._textareaElement.classList.add(this._measuringClass);\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const scrollHeight = this._textareaElement.scrollHeight - 4;\n        this._textareaElement.classList.remove(this._measuringClass);\n        return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n        if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n            return;\n        }\n        if (!this.placeholder) {\n            this._cachedPlaceholderHeight = 0;\n            return;\n        }\n        const value = this._textareaElement.value;\n        this._textareaElement.value = this._textareaElement.placeholder;\n        this._cachedPlaceholderHeight = this._measureScrollHeight();\n        this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        this._cacheTextareaPlaceholderHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const scrollHeight = this._measureScrollHeight();\n        const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"], placeholder: \"placeholder\" }, exportAs: [\"cdkTextareaAutosize\"] });\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    placeholder: [{ type: Input }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], placeholder: [{\n            type: Input\n        }], \n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵfac = function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); };\nTextFieldModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[PlatformModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill, CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill, CdkTextareaAutosize]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"button\"];\nconst _c1 = [\"*\"];\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatButtonToggleGroup),\n    multi: true\n};\n// Counter used to generate unique IDs.\nlet uniqueIdCounter = 0;\n/** Change event object emitted by MatButtonToggle. */\nclass MatButtonToggleChange {\n    constructor(\n    /** The MatButtonToggle that emits the event. */\n    source, \n    /** The value assigned to the MatButtonToggle. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nclass MatButtonToggleGroup {\n    constructor(_changeDetector, defaultOptions) {\n        this._changeDetector = _changeDetector;\n        this._vertical = false;\n        this._multiple = false;\n        this._disabled = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = () => { };\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this._onTouched = () => { };\n        this._name = `mat-button-toggle-group-${uniqueIdCounter++}`;\n        /**\n         * Event that emits whenever the value of the group changes.\n         * Used to facilitate two-way data binding.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** Event emitted when the group's value changes. */\n        this.change = new EventEmitter();\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /** `name` attribute for the underlying `input` element. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(toggle => {\n                toggle.name = this._name;\n                toggle._markForCheck();\n            });\n        }\n    }\n    /** Whether the toggle group is vertical. */\n    get vertical() { return this._vertical; }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Value of the toggle group. */\n    get value() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        if (this.multiple) {\n            return selected.map(toggle => toggle.value);\n        }\n        return selected[0] ? selected[0].value : undefined;\n    }\n    set value(newValue) {\n        this._setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n    /** Selected button toggles in the group. */\n    get selected() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        return this.multiple ? selected : (selected[0] || null);\n    }\n    /** Whether multiple button toggles can be selected. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether multiple button toggle group is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(toggle => toggle._markForCheck());\n        }\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    ngAfterContentInit() {\n        this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        const selected = this.selected;\n        const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n        const event = new MatButtonToggleChange(source, this.value);\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     * @param deferEvents Whether to defer emitting the change events.\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            this.selected.checked = false;\n        }\n        if (this._selectionModel) {\n            if (select) {\n                this._selectionModel.select(toggle);\n            }\n            else {\n                this._selectionModel.deselect(toggle);\n            }\n        }\n        else {\n            deferEvents = true;\n        }\n        // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n        // the side-effect is that we may end up updating the model value out of sequence in others\n        // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n        if (deferEvents) {\n            Promise.resolve().then(() => this._updateModelValue(isUserInput));\n        }\n        else {\n            this._updateModelValue(isUserInput);\n        }\n    }\n    /** Checks whether a button toggle is selected. */\n    _isSelected(toggle) {\n        return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /** Determines whether a button toggle should be checked on init. */\n    _isPrechecked(toggle) {\n        if (typeof this._rawValue === 'undefined') {\n            return false;\n        }\n        if (this.multiple && Array.isArray(this._rawValue)) {\n            return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n        }\n        return toggle.value === this._rawValue;\n    }\n    /** Updates the selection state of the toggles in the group based on a value. */\n    _setSelectionByValue(value) {\n        this._rawValue = value;\n        if (!this._buttonToggles) {\n            return;\n        }\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n            this._clearSelection();\n            value.forEach((currentValue) => this._selectValue(currentValue));\n        }\n        else {\n            this._clearSelection();\n            this._selectValue(value);\n        }\n    }\n    /** Clears the selected toggles. */\n    _clearSelection() {\n        this._selectionModel.clear();\n        this._buttonToggles.forEach(toggle => toggle.checked = false);\n    }\n    /** Selects a value if there's a toggle that corresponds to it. */\n    _selectValue(value) {\n        const correspondingOption = this._buttonToggles.find(toggle => {\n            return toggle.value != null && toggle.value === value;\n        });\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this._selectionModel.select(correspondingOption);\n        }\n    }\n    /** Syncs up the group's value with the model and emits the change event. */\n    _updateModelValue(isUserInput) {\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this._emitChangeEvent();\n        }\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n}\nMatButtonToggleGroup.ɵfac = function MatButtonToggleGroup_Factory(t) { return new (t || MatButtonToggleGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8)); };\nMatButtonToggleGroup.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatButtonToggleGroup, selectors: [[\"mat-button-toggle-group\"]], contentQueries: function MatButtonToggleGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatButtonToggle, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttonToggles = _t);\n    } }, hostAttrs: [\"role\", \"group\", 1, \"mat-button-toggle-group\"], hostVars: 5, hostBindings: function MatButtonToggleGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-button-toggle-vertical\", ctx.vertical)(\"mat-button-toggle-group-appearance-standard\", ctx.appearance === \"standard\");\n    } }, inputs: { appearance: \"appearance\", name: \"name\", vertical: \"vertical\", value: \"value\", multiple: \"multiple\", disabled: \"disabled\" }, outputs: { valueChange: \"valueChange\", change: \"change\" }, exportAs: [\"matButtonToggleGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n            { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n        ])] });\nMatButtonToggleGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggleGroup.propDecorators = {\n    _buttonToggles: [{ type: ContentChildren, args: [forwardRef(() => MatButtonToggle), {\n                    // Note that this would technically pick up toggles\n                    // from nested groups, but that's not a case that we support.\n                    descendants: true\n                },] }],\n    appearance: [{ type: Input }],\n    name: [{ type: Input }],\n    vertical: [{ type: Input }],\n    value: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    multiple: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButtonToggleGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-button-toggle-group',\n                providers: [\n                    MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                    { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n                ],\n                host: {\n                    'role': 'group',\n                    'class': 'mat-button-toggle-group',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[class.mat-button-toggle-vertical]': 'vertical',\n                    '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"'\n                },\n                exportAs: 'matButtonToggleGroup'\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n            }] }]; }, { valueChange: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], appearance: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _buttonToggles: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatButtonToggle), {\n                    // Note that this would technically pick up toggles\n                    // from nested groups, but that's not a case that we support.\n                    descendants: true\n                }]\n        }] }); })();\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/** @docs-private */\nconst _MatButtonToggleBase = mixinDisableRipple(class {\n});\n/** Single button inside of a toggle group. */\nclass MatButtonToggle extends _MatButtonToggleBase {\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, defaultTabIndex, defaultOptions) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._isSingleSelector = false;\n        this._checked = false;\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._disabled = false;\n        /** Event emitted when the group value changes. */\n        this.change = new EventEmitter();\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n        this.buttonToggleGroup = toggleGroup;\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /** Unique ID for the underlying `button` element. */\n    get buttonId() { return `${this.id}-button`; }\n    /** The appearance style of the button. */\n    get appearance() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    set appearance(value) {\n        this._appearance = value;\n    }\n    /** Whether the button is checked. */\n    get checked() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    set checked(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the button is disabled. */\n    get disabled() {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    ngOnInit() {\n        const group = this.buttonToggleGroup;\n        this._isSingleSelector = group && !group.multiple;\n        this.id = this.id || `mat-button-toggle-${uniqueIdCounter++}`;\n        if (this._isSingleSelector) {\n            this.name = group.name;\n        }\n        if (group) {\n            if (group._isPrechecked(this)) {\n                this.checked = true;\n            }\n            else if (group._isSelected(this) !== this._checked) {\n                // As as side effect of the circular dependency between the toggle group and the button,\n                // we may end up in a state where the button is supposed to be checked on init, but it\n                // isn't, because the checked value was assigned too early. This can happen when Ivy\n                // assigns the static input value before the `ngOnInit` has run.\n                group._syncButtonToggle(this, this._checked);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        const group = this.buttonToggleGroup;\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group._isSelected(this)) {\n            group._syncButtonToggle(this, false, false, true);\n        }\n    }\n    /** Focuses the button. */\n    focus(options) {\n        this._buttonElement.nativeElement.focus(options);\n    }\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    _onButtonClick() {\n        const newChecked = this._isSingleSelector ? true : !this._checked;\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup._onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatButtonToggle.ɵfac = function MatButtonToggle_Factory(t) { return new (t || MatButtonToggle)(ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_GROUP, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8)); };\nMatButtonToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatButtonToggle, selectors: [[\"mat-button-toggle\"]], viewQuery: function MatButtonToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttonElement = _t.first);\n    } }, hostAttrs: [\"role\", \"presentation\", 1, \"mat-button-toggle\"], hostVars: 12, hostBindings: function MatButtonToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatButtonToggle_focus_HostBindingHandler() { return ctx.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"id\", ctx.id)(\"name\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-button-toggle-standalone\", !ctx.buttonToggleGroup)(\"mat-button-toggle-checked\", ctx.checked)(\"mat-button-toggle-disabled\", ctx.disabled)(\"mat-button-toggle-appearance-standard\", ctx.appearance === \"standard\");\n    } }, inputs: { disableRipple: \"disableRipple\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], tabIndex: \"tabIndex\", appearance: \"appearance\", checked: \"checked\", disabled: \"disabled\", id: \"id\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], value: \"value\" }, outputs: { change: \"change\" }, exportAs: [\"matButtonToggle\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 6, vars: 9, consts: [[\"type\", \"button\", 1, \"mat-button-toggle-button\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"click\"], [\"button\", \"\"], [1, \"mat-button-toggle-label-content\"], [1, \"mat-button-toggle-focus-overlay\"], [\"matRipple\", \"\", 1, \"mat-button-toggle-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"]], template: function MatButtonToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatButtonToggle_Template_button_click_0_listener() { return ctx._onButtonClick(); });\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"span\", 3);\n        ɵngcc0.ɵɵelement(5, \"span\", 4);\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.buttonId)(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-pressed\", ctx.checked)(\"name\", ctx.name || null)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled);\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatButtonToggle.ctorParameters = () => [\n    { type: MatButtonToggleGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_GROUP,] }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggle.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    _buttonElement: [{ type: ViewChild, args: ['button',] }],\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    value: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    appearance: [{ type: Input }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButtonToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-button-toggle',\n                template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"name || null\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matButtonToggle',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disableRipple'],\n                host: {\n                    '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n                    '[class.mat-button-toggle-checked]': 'checked',\n                    '[class.mat-button-toggle-disabled]': 'disabled',\n                    '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n                    'class': 'mat-button-toggle',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.id]': 'id',\n                    '[attr.name]': 'null',\n                    '(focus)': 'focus()',\n                    'role': 'presentation'\n                },\n                styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatButtonToggleGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_GROUP]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _buttonElement: [{\n            type: ViewChild,\n            args: ['button']\n        }], value: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonToggleModule {\n}\nMatButtonToggleModule.ɵfac = function MatButtonToggleModule_Factory(t) { return new (t || MatButtonToggleModule)(); };\nMatButtonToggleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatButtonToggleModule });\nMatButtonToggleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule, MatRippleModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButtonToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, MatRippleModule],\n                exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n                declarations: [MatButtonToggleGroup, MatButtonToggle]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonToggleModule, { declarations: function () { return [MatButtonToggleGroup, MatButtonToggle]; }, imports: function () { return [MatCommonModule, MatRippleModule]; }, exports: function () { return [MatCommonModule, MatButtonToggleGroup, MatButtonToggle]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n\n//# sourceMappingURL=button-toggle.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [\"*\"];\nconst _c2 = \".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\";\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\nconst _MatButtonBase = mixinColor(mixinDisabled(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n})));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonBase {\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /** Whether the button is round. */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /** Whether the button is icon button. */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                this._getHostElement().classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the button. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n    }\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Gets whether the button has one of the given attributes. */\n    _hasHostAttributes(...attributes) {\n        return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n    }\n}\nMatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatButton.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatRipple, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatButton_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-button-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"span\", 1);\n        ɵngcc0.ɵɵelement(3, \"span\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [_c2], encapsulation: 2, changeDetection: 0 });\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButton, [{\n        type: Component,\n        args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    // Add a class for disabled button styling instead of the using attribute\n                    // selector or pseudo-selector.  This allows users to create focusabled\n                    // disabled buttons without recreating the styles.\n                    '[class.mat-button-disabled]': 'disabled',\n                    'class': 'mat-focus-indicator'\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatAnchor.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatAnchor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-button-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"span\", 1);\n        ɵngcc0.ɵɵelement(3, \"span\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [_c2], encapsulation: 2, changeDetection: 0 });\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n        type: Component,\n        args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-button-disabled]': 'disabled',\n                    'class': 'mat-focus-indicator'\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵfac = function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); };\nMatButtonModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatButtonModule });\nMatButtonModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            MatRippleModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, { declarations: function () { return [MatButton, MatAnchor]; }, imports: function () { return [MatRippleModule,\n        MatCommonModule]; }, exports: function () { return [MatButton, MatAnchor, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n\n//# sourceMappingURL=button.js.map","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function (a0) { return { enterDuration: a0 }; };\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true\n};\n/** Change event object emitted by MatCheckbox. */\nclass MatCheckboxChange {\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nconst _MatCheckboxBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxBase {\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || defaults;\n        this.color = this.defaultColor = this._options.color || defaults.color;\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Whether the checkbox is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    ngAfterViewChecked() { }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     */\n    get checked() { return this._checked; }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() { return this._indeterminate; }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event) {\n        var _a;\n        const clickAction = (_a = this._options) === null || _a === void 0 ? void 0 : _a.clickAction;\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /** Focuses the checkbox. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(MatRipple, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 21, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"span\", 5);\n        ɵngcc0.ɵɵelement(6, \"span\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"span\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"span\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked())(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction1(19, _c1, ctx._animationMode === \"NoopAnimations\" ? 0 : 150));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-ripple{outline:solid 3px}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _animationMode === 'NoopAnimations' ? 0 : 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-ripple{outline:solid 3px}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = /*@__PURE__*/ function () { let ɵMatCheckboxRequiredValidator_BaseFactory; return function MatCheckboxRequiredValidator_Factory(t) { return (ɵMatCheckboxRequiredValidator_BaseFactory || (ɵMatCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator)))(t || MatCheckboxRequiredValidator); }; }();\nMatCheckboxRequiredValidator.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based checkbox implementations. */\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵfac = function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); };\n_MatCheckboxRequiredValidatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵfac = function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); };\nMatCheckboxModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ], MatCommonModule, _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { A11yModule } from '@angular/cdk/a11y';\nimport { Overlay, FlexibleConnectedPositionStrategy, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Input, Output, Optional, SkipSelf, InjectionToken, ChangeDetectorRef, Inject, ViewChild, forwardRef, Directive, ViewContainerRef, Attribute, ContentChild, InjectFlags, Injector, Self, TemplateRef, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor, ErrorStateMatcher, mixinErrorState, MatCommonModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { trigger, transition, animate, keyframes, style, state } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, NgControl, NgForm, FormGroupDirective, ControlContainer } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD, MatFormFieldControl } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/material/form-field';\nimport * as ɵngcc9 from '@angular/forms';\n\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.label, \" \");\n} }\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r4._cellPadding)(\"padding-bottom\", ctx_r4._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\", \" \");\n} }\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r9); const item_r6 = restoredCtx.$implicit; const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8._cellClicked(item_r6, $event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const colIndex_r7 = ctx.index;\n    const rowIndex_r3 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r5._cellWidth)(\"padding-top\", ctx_r5._cellPadding)(\"padding-bottom\", ctx_r5._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7))(\"mat-calendar-body-range-start\", ctx_r5._isRangeStart(item_r6.compareValue))(\"mat-calendar-body-range-end\", ctx_r5._isRangeEnd(item_r6.compareValue))(\"mat-calendar-body-in-range\", ctx_r5._isInRange(item_r6.compareValue))(\"mat-calendar-body-comparison-bridge-start\", ctx_r5._isComparisonBridgeStart(item_r6.compareValue, rowIndex_r3, colIndex_r7))(\"mat-calendar-body-comparison-bridge-end\", ctx_r5._isComparisonBridgeEnd(item_r6.compareValue, rowIndex_r3, colIndex_r7))(\"mat-calendar-body-comparison-start\", ctx_r5._isComparisonStart(item_r6.compareValue))(\"mat-calendar-body-comparison-end\", ctx_r5._isComparisonEnd(item_r6.compareValue))(\"mat-calendar-body-in-comparison-range\", ctx_r5._isInComparisonRange(item_r6.compareValue))(\"mat-calendar-body-preview-start\", ctx_r5._isPreviewStart(item_r6.compareValue))(\"mat-calendar-body-preview-end\", ctx_r5._isPreviewEnd(item_r6.compareValue))(\"mat-calendar-body-in-preview\", ctx_r5._isInPreview(item_r6.compareValue));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r6.cssClasses)(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : -1);\n    ɵngcc0.ɵɵattribute(\"data-mat-row\", rowIndex_r3)(\"data-mat-col\", colIndex_r7)(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5._isSelected(item_r6.compareValue));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r5._isSelected(item_r6.compareValue))(\"mat-calendar-body-comparison-identical\", ctx_r5._isComparisonIdentical(item_r6.compareValue))(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.compareValue);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r6.displayValue, \" \");\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 4, 46, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const rowIndex_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r2);\n} }\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"abbr\", 6);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"title\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.narrow);\n} }\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.activeDate = $event; })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._dateSelected($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass)(\"comparisonStart\", ctx_r1.comparisonStart)(\"comparisonEnd\", ctx_r1.comparisonEnd);\n} }\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.activeDate = $event; })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9._monthSelectedInYearView($event); })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._goToDateInView($event, \"month\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate)(\"dateClass\", ctx_r2.dateClass);\n} }\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.activeDate = $event; })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13._yearSelectedInMultiYearView($event); })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14._goToDateInView($event, \"year\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate)(\"dateClass\", ctx_r3.dateClass);\n} }\nfunction MatDatepickerContent_ng_template_2_Template(rf, ctx) { }\nconst _c2 = [\"button\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nconst _c5 = [[[\"input\", \"matStartDate\", \"\"]], [[\"input\", \"matEndDate\", \"\"]]];\nconst _c6 = [\"input[matStartDate]\", \"input[matEndDate]\"];\nfunction MatDatepickerActions_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Datepicker data that requires internationalization. */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the calendar popup (used by screen readers). */\n        this.calendarLabel = 'Calendar';\n        /** A label for the button used to open the calendar popup (used by screen readers). */\n        this.openCalendarLabel = 'Open calendar';\n        /** Label for the button used to close the calendar popup. */\n        this.closeCalendarLabel = 'Close calendar';\n        /** A label for the previous month button (used by screen readers). */\n        this.prevMonthLabel = 'Previous month';\n        /** A label for the next month button (used by screen readers). */\n        this.nextMonthLabel = 'Next month';\n        /** A label for the previous year button (used by screen readers). */\n        this.prevYearLabel = 'Previous year';\n        /** A label for the next year button (used by screen readers). */\n        this.nextYearLabel = 'Next year';\n        /** A label for the previous multi-year button (used by screen readers). */\n        this.prevMultiYearLabel = 'Previous 24 years';\n        /** A label for the next multi-year button (used by screen readers). */\n        this.nextMultiYearLabel = 'Next 24 years';\n        /** A label for the 'switch to month view' button (used by screen readers). */\n        this.switchToMonthViewLabel = 'Choose date';\n        /** A label for the 'switch to year view' button (used by screen readers). */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /** Formats a range of years. */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); };\nMatDatepickerIntl.ɵprov = i0.ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n        this.compareValue = compareValue;\n        this.rawValue = rawValue;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nclass MatCalendarBody {\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** The number of columns in the table. */\n        this.numCols = 7;\n        /** The cell number of the active cell in the table. */\n        this.activeCell = 0;\n        /** Whether a range is being selected. */\n        this.isRange = false;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /** Start of the preview range. */\n        this.previewStart = null;\n        /** End of the preview range. */\n        this.previewEnd = null;\n        /** Emits when a new value is selected. */\n        this.selectedValueChange = new EventEmitter();\n        /** Emits when the preview has changed as a result of a user action. */\n        this.previewChange = new EventEmitter();\n        /**\n         * Event handler for when the user enters an element\n         * inside the calendar body (e.g. by hovering in or focus).\n         */\n        this._enterHandler = (event) => {\n            if (this._skipNextFocus && event.type === 'focus') {\n                this._skipNextFocus = false;\n                return;\n            }\n            // We only need to hit the zone when we're selecting a range.\n            if (event.target && this.isRange) {\n                const cell = this._getCellFromElement(event.target);\n                if (cell) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: cell.enabled ? cell : null, event }));\n                }\n            }\n        };\n        /**\n         * Event handler for when the user's pointer leaves an element\n         * inside the calendar body (e.g. by hovering out or blurring).\n         */\n        this._leaveHandler = (event) => {\n            // We only need to hit the zone when we're selecting a range.\n            if (this.previewEnd !== null && this.isRange) {\n                // Only reset the preview end value when leaving cells. This looks better, because\n                // we have a gap between the cells and the rows and we don't want to remove the\n                // range just for it to show up again when the user moves a few pixels to the side.\n                if (event.target && isTableCell(event.target)) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: null, event }));\n                }\n            }\n        };\n        _ngZone.runOutsideAngular(() => {\n            const element = _elementRef.nativeElement;\n            element.addEventListener('mouseenter', this._enterHandler, true);\n            element.addEventListener('focus', this._enterHandler, true);\n            element.addEventListener('mouseleave', this._leaveHandler, true);\n            element.addEventListener('blur', this._leaveHandler, true);\n        });\n    }\n    /** Called when a cell is clicked. */\n    _cellClicked(cell, event) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit({ value: cell.value, event });\n        }\n    }\n    /** Returns whether a cell should be marked as selected. */\n    _isSelected(value) {\n        return this.startValue === value || this.endValue === value;\n    }\n    ngOnChanges(changes) {\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mouseenter', this._enterHandler, true);\n        element.removeEventListener('focus', this._enterHandler, true);\n        element.removeEventListener('mouseleave', this._leaveHandler, true);\n        element.removeEventListener('blur', this._leaveHandler, true);\n    }\n    /** Returns whether a cell is active. */\n    _isActiveCell(rowIndex, colIndex) {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview = true) {\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    if (!movePreview) {\n                        this._skipNextFocus = true;\n                    }\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n    /** Gets whether a value is the start of the main range. */\n    _isRangeStart(value) {\n        return isStart(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is the end of the main range. */\n    _isRangeEnd(value) {\n        return isEnd(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is within the currently-selected range. */\n    _isInRange(value) {\n        return isInRange(value, this.startValue, this.endValue, this.isRange);\n    }\n    /** Gets whether a value is the start of the comparison range. */\n    _isComparisonStart(value) {\n        return isStart(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeStart(value, rowIndex, colIndex) {\n        if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let previousCell = this.rows[rowIndex][colIndex - 1];\n        if (!previousCell) {\n            const previousRow = this.rows[rowIndex - 1];\n            previousCell = previousRow && previousRow[previousRow.length - 1];\n        }\n        return previousCell && !this._isRangeEnd(previousCell.compareValue);\n    }\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n        if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let nextCell = this.rows[rowIndex][colIndex + 1];\n        if (!nextCell) {\n            const nextRow = this.rows[rowIndex + 1];\n            nextCell = nextRow && nextRow[0];\n        }\n        return nextCell && !this._isRangeStart(nextCell.compareValue);\n    }\n    /** Gets whether a value is the end of the comparison range. */\n    _isComparisonEnd(value) {\n        return isEnd(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Gets whether a value is within the current comparison range. */\n    _isInComparisonRange(value) {\n        return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n    }\n    /**\n     * Gets whether a value is the same as the start and end of the comparison range.\n     * For context, the functions that we use to determine whether something is the start/end of\n     * a range don't allow for the start and end to be on the same day, because we'd have to use\n     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n     * the regular range, because when it happens, the selected styles take over and still show where\n     * the range would've been, however we don't have these selected styles for a comparison range.\n     * This function is used to apply a class that serves the same purpose as the one for selected\n     * dates, but it only applies in the context of a comparison range.\n     */\n    _isComparisonIdentical(value) {\n        // Note that we don't need to null check the start/end\n        // here, because the `value` will always be defined.\n        return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n    }\n    /** Gets whether a value is the start of the preview range. */\n    _isPreviewStart(value) {\n        return isStart(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is the end of the preview range. */\n    _isPreviewEnd(value) {\n        return isEnd(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is inside the preview range. */\n    _isInPreview(value) {\n        return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n    }\n    /** Finds the MatCalendarCell that corresponds to a DOM node. */\n    _getCellFromElement(element) {\n        let cell;\n        if (isTableCell(element)) {\n            cell = element;\n        }\n        else if (isTableCell(element.parentNode)) {\n            cell = element.parentNode;\n        }\n        if (cell) {\n            const row = cell.getAttribute('data-mat-row');\n            const col = cell.getAttribute('data-mat-col');\n            if (row && col) {\n                return this.rows[parseInt(row)][parseInt(col)];\n            }\n        }\n        return null;\n    }\n}\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatCalendarBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], hostAttrs: [1, \"mat-calendar-body\"], inputs: { numCols: \"numCols\", activeCell: \"activeCell\", isRange: \"isRange\", cellAspectRatio: \"cellAspectRatio\", previewStart: \"previewStart\", previewEnd: \"previewEnd\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", startValue: \"startValue\", endValue: \"endValue\", labelMinRequiredCells: \"labelMinRequiredCells\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedValueChange: \"selectedValueChange\", previewChange: \"previewChange\" }, exportAs: [\"matCalendarBody\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 2, vars: 2, consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"mat-calendar-body-range-start\", \"mat-calendar-body-range-end\", \"mat-calendar-body-in-range\", \"mat-calendar-body-comparison-bridge-start\", \"mat-calendar-body-comparison-bridge-end\", \"mat-calendar-body-comparison-start\", \"mat-calendar-body-comparison-end\", \"mat-calendar-body-in-comparison-range\", \"mat-calendar-body-preview-start\", \"mat-calendar-body-preview-end\", \"mat-calendar-body-in-preview\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\", \"mat-focus-indicator\"], [1, \"mat-calendar-body-cell-preview\"]], template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    startValue: [{ type: Input }],\n    endValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    isRange: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    previewStart: [{ type: Input }],\n    previewEnd: [{ type: Input }],\n    selectedValueChange: [{ type: Output }],\n    previewChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{\n                selector: '[mat-calendar-body]',\n                template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\n    percentage of the width (a variant of the trick described here:\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      aria-hidden=\\\"true\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"_isSelected(item.compareValue)\\\"\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n        {{item.displayValue}}\\n      </div>\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\n  </td>\\n</tr>\\n\",\n                host: {\n                    'class': 'mat-calendar-body'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { numCols: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], isRange: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], previewStart: [{\n            type: Input\n        }], previewEnd: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], previewChange: [{\n            type: Output\n        }], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], startValue: [{\n            type: Input\n        }], endValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }] }); })();\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n    return node.nodeName === 'TD';\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n    return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n    return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n    return rangeEnabled && start !== null && end !== null && start !== end &&\n        value >= start && value <= end;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A class representing a range of dates. */\nclass DateRange {\n    constructor(\n    /** The start date of the range. */\n    start, \n    /** The end date of the range. */\n    end) {\n        this.start = start;\n        this.end = end;\n    }\n}\n/**\n * A selection model containing a date selection.\n * @docs-private\n */\nclass MatDateSelectionModel {\n    constructor(\n    /** The current selection. */\n    selection, _adapter) {\n        this.selection = selection;\n        this._adapter = _adapter;\n        this._selectionChanged = new Subject();\n        /** Emits when the selection has changed. */\n        this.selectionChanged = this._selectionChanged;\n        this.selection = selection;\n    }\n    /**\n     * Updates the current selection in the model.\n     * @param value New selection that should be assigned.\n     * @param source Object that triggered the selection change.\n     */\n    updateSelection(value, source) {\n        const oldValue = this.selection;\n        this.selection = value;\n        this._selectionChanged.next({ selection: value, source, oldValue });\n    }\n    ngOnDestroy() {\n        this._selectionChanged.complete();\n    }\n    _isValidDateInstance(date) {\n        return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n    }\n}\nMatDateSelectionModel.ɵfac = function MatDateSelectionModel_Factory(t) { return new (t || MatDateSelectionModel)(ɵngcc0.ɵɵinject(undefined), ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nMatDateSelectionModel.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MatDateSelectionModel, factory: MatDateSelectionModel.ɵfac });\nMatDateSelectionModel.ctorParameters = () => [\n    { type: undefined },\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateSelectionModel, [{\n        type: Injectable\n    }], function () { return [{ type: undefined }, { type: ɵngcc2.DateAdapter }]; }, null); })();\n/**\n * A selection model that contains a single date.\n * @docs-private\n */\nclass MatSingleDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(null, adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a single date selection, the added date\n     * simply overwrites the previous selection\n     */\n    add(date) {\n        super.updateSelection(date, this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        return this.selection != null && this._isValidDateInstance(this.selection);\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a single date selection, this\n     * is true if the current selection is not null.\n     */\n    isComplete() {\n        return this.selection != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatSingleDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatSingleDateSelectionModel.ɵfac = function MatSingleDateSelectionModel_Factory(t) { return new (t || MatSingleDateSelectionModel)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nMatSingleDateSelectionModel.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MatSingleDateSelectionModel, factory: MatSingleDateSelectionModel.ɵfac });\nMatSingleDateSelectionModel.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSingleDateSelectionModel, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/**\n * A selection model that contains a date range.\n * @docs-private\n */\nclass MatRangeDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(new DateRange(null, null), adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a date range selection, the added date\n     * fills in the next `null` value in the range. If both the start and the end already have a date,\n     * the selection is reset so that the given date is the new `start` and the `end` is null.\n     */\n    add(date) {\n        let { start, end } = this.selection;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        super.updateSelection(new DateRange(start, end), this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        const { start, end } = this.selection;\n        // Empty ranges are valid.\n        if (start == null && end == null) {\n            return true;\n        }\n        // Complete ranges are only valid if both dates are valid and the start is before the end.\n        if (start != null && end != null) {\n            return this._isValidDateInstance(start) && this._isValidDateInstance(end) &&\n                this._adapter.compareDate(start, end) <= 0;\n        }\n        // Partial ranges are valid if the start/end is valid.\n        return (start == null || this._isValidDateInstance(start)) &&\n            (end == null || this._isValidDateInstance(end));\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a date range selection, this\n     * is true if the current selection has a non-null `start` and `end`.\n     */\n    isComplete() {\n        return this.selection.start != null && this.selection.end != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatRangeDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatRangeDateSelectionModel.ɵfac = function MatRangeDateSelectionModel_Factory(t) { return new (t || MatRangeDateSelectionModel)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nMatRangeDateSelectionModel.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MatRangeDateSelectionModel, factory: MatRangeDateSelectionModel.ɵfac });\nMatRangeDateSelectionModel.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRangeDateSelectionModel, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/** @docs-private */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatSingleDateSelectionModel(adapter);\n}\n/**\n * Used to provide a single selection model to a component.\n * @docs-private\n */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n/** @docs-private */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatRangeDateSelectionModel(adapter);\n}\n/**\n * Used to provide a range selection model to a component.\n * @docs-private\n */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\nclass DefaultMatCalendarRangeStrategy {\n    constructor(_dateAdapter) {\n        this._dateAdapter = _dateAdapter;\n    }\n    selectionFinished(date, currentRange) {\n        let { start, end } = currentRange;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        return new DateRange(start, end);\n    }\n    createPreview(activeDate, currentRange) {\n        let start = null;\n        let end = null;\n        if (currentRange.start && !currentRange.end && activeDate) {\n            start = currentRange.start;\n            end = activeDate;\n        }\n        return new DateRange(start, end);\n    }\n}\nDefaultMatCalendarRangeStrategy.ɵfac = function DefaultMatCalendarRangeStrategy_Factory(t) { return new (t || DefaultMatCalendarRangeStrategy)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nDefaultMatCalendarRangeStrategy.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DefaultMatCalendarRangeStrategy, factory: DefaultMatCalendarRangeStrategy.ɵfac });\nDefaultMatCalendarRangeStrategy.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultMatCalendarRangeStrategy, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/** @docs-private */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n    return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n    deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n    useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nclass MatMonthView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rangeStrategy = _rangeStrategy;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new date is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setRanges(this._selected);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnChanges(changes) {\n        const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n        if (comparisonChange && !comparisonChange.firstChange) {\n            this._setRanges(this.selected);\n        }\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new date is selected. */\n    _dateSelected(event) {\n        const date = event.value;\n        const selectedYear = this._dateAdapter.getYear(this.activeDate);\n        const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n        const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n        let rangeStartDate;\n        let rangeEndDate;\n        if (this._selected instanceof DateRange) {\n            rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n            rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n        }\n        else {\n            rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n        }\n        if (rangeStartDate !== date || rangeEndDate !== date) {\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit({ value: selectedDate, event: event.event });\n        this._previewStart = this._previewEnd = null;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected({ value: this._dateAdapter.getDate(this._activeDate), event });\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            case ESCAPE:\n                // Abort the current range selection if the user presses escape mid-selection.\n                if (this._previewEnd != null && !hasModifierKey(event)) {\n                    this._previewStart = this._previewEnd = null;\n                    this.selectedChange.emit(null);\n                    this._userSelection.emit({ value: null, event });\n                    event.preventDefault();\n                    event.stopPropagation(); // Prevents the overlay from closing.\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Initializes this month view. */\n    _init() {\n        this._setRanges(this.selected);\n        this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n        this._monthLabel = this._dateFormats.display.monthLabel\n            ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel)\n            : this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview) {\n        this._matCalendarBody._focusActiveCell(movePreview);\n    }\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\n    _previewChanged({ event, value: cell }) {\n        if (this._rangeStrategy) {\n            // We can assume that this will be a range, because preview\n            // events aren't fired for single date selections.\n            const value = cell ? cell.rawValue : null;\n            const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n            this._previewStart = this._getCellCompareValue(previewRange.start);\n            this._previewEnd = this._getCellCompareValue(previewRange.end);\n            // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n            // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n            // when navigating one month back using the keyboard which will cause this handler\n            // to throw a \"changed after checked\" error when updating the preview state.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Initializes the weekdays. */\n    _initWeekdays() {\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        let weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /** Creates MatCalendarCells for the dates in this month. */\n    _createWeekCells() {\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this._shouldEnableDate(date);\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n            this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n        }\n    }\n    /** Date filter for the month */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /** Gets the value that will be used to one cell to another. */\n    _getCellCompareValue(date) {\n        if (date) {\n            // We use the time since the Unix epoch to compare dates in this view, rather than the\n            // cell values, because we need to support ranges that span across multiple months/years.\n            const year = this._dateAdapter.getYear(date);\n            const month = this._dateAdapter.getMonth(date);\n            const day = this._dateAdapter.getDate(date);\n            return new Date(year, month, day).getTime();\n        }\n        return null;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the current range based on a model value. */\n    _setRanges(selectedValue) {\n        if (selectedValue instanceof DateRange) {\n            this._rangeStart = this._getCellCompareValue(selectedValue.start);\n            this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n            this._isRange = true;\n        }\n        else {\n            this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n            this._isRange = false;\n        }\n        this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n        this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n    }\n}\nMatMonthView.ɵfac = function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8)); };\nMatMonthView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 7, vars: 13, consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", \"colspan\", \"7\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\", \"isRange\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"previewChange\", \"keydown\"], [\"scope\", \"col\"], [1, \"mat-calendar-abbr\"]], template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 3, 3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); })(\"previewChange\", function MatMonthView_Template_tbody_previewChange_6_listener($event) { return ctx._previewChanged($event); })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"startValue\", ctx._rangeStart)(\"endValue\", ctx._rangeEnd)(\"comparisonStart\", ctx._comparisonRangeStart)(\"comparisonEnd\", ctx._comparisonRangeEnd)(\"previewStart\", ctx._previewStart)(\"previewEnd\", ctx._previewEnd)(\"isRange\", ctx._isRange)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, directives: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_SELECTION_STRATEGY,] }, { type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <!-- For the day-of-the-week column header, we use an `<abbr>` element because VoiceOver\\n           ignores the `aria-label`. ChromeVox, however, does not read the full name\\n           for the `<abbr>`, so we still set `aria-label` on the header element. -->\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">\\n        <abbr class=\\\"mat-calendar-abbr\\\" [attr.title]=\\\"day.long\\\">{{day.narrow}}</abbr>\\n      </th>\\n    </tr>\\n    <tr><th aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n            }, {\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\nclass MatMultiYearView {\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new year is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected year. This doesn't imply a change on the selected date */\n        this.yearSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedYear(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Initializes this multi-year view. */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map(year => this._createCellForYear(year)));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles when a new year is selected. */\n    _yearSelected(event) {\n        const year = event.value;\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeydown(event) {\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected({ value: this._dateAdapter.getYear(this._activeDate), event });\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /** Creates an MatCalendarCell for the given year. */\n    _createCellForYear(year) {\n        const date = this._dateAdapter.createDate(year, 0, 1);\n        const yearName = this._dateAdapter.getYearName(date);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n    }\n    /** Whether the given year is enabled. */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-highlighted year based on a model value. */\n    _setSelectedYear(value) {\n        this._selectedYear = null;\n        if (value instanceof DateRange) {\n            const displayValue = value.start || value.end;\n            if (displayValue) {\n                this._selectedYear = this._dateAdapter.getYear(displayValue);\n            }\n        }\n        else if (value) {\n            this._selectedYear = this._dateAdapter.getYear(value);\n        }\n    }\n}\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMultiYearView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], decls: 5, vars: 7, consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"startValue\", ctx._selectedYear)(\"endValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    const year1 = dateAdapter.getYear(date1);\n    const year2 = dateAdapter.getYear(date2);\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    let startingYear = 0;\n    if (maxDate) {\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\nclass MatYearView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new month is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected month. This doesn't imply a change on the selected date */\n        this.monthSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this year view (everything other than the year is ignored). */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedMonth(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new month is selected. */\n    _monthSelected(event) {\n        const month = event.value;\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected({ value: this._dateAdapter.getMonth(this._activeDate), event });\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Initializes this year view. */\n    _init() {\n        this._setSelectedMonth(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /** Creates an MatCalendarCell for the given month. */\n    _createCellForMonth(month, monthName) {\n        const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n    }\n    /** Whether the given month is enabled. */\n    _shouldEnableMonth(month) {\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-selected month based on a model value. */\n    _setSelectedMonth(value) {\n        if (value instanceof DateRange) {\n            this._selectedMonth = this._getMonthInCurrentYear(value.start) ||\n                this._getMonthInCurrentYear(value.end);\n        }\n        else {\n            this._selectedMonth = this._getMonthInCurrentYear(value);\n        }\n    }\n}\nMatYearView.ɵfac = function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatYearView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], decls: 5, vars: 9, consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"startValue\", ctx._selectedMonth)(\"endValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs. */\nlet uniqueId = 0;\n/** Default header for MatCalendar */\nclass MatCalendarHeader {\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._buttonDescriptionId = `mat-calendar-button-${uniqueId++}`;\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /** The label for the current calendar view. */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /** The label for the previous button. */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /** The label for the next button. */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /** Handles user clicks on the previous button. */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /** Handles user clicks on the next button. */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /** Whether the previous period button is enabled. */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /** Whether the next period button is enabled. */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatCalendar)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendarHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], exportAs: [\"matCalendarHeader\"], ngContentSelectors: _c1, decls: 10, vars: 10, consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]], template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵelementStart(3, \"span\");\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(6, \"div\", 4);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener() { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_9_listener() { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel)(\"aria-describedby\", ctx._buttonDescriptionId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._buttonDescriptionId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.periodButtonText);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView !== \"month\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef(() => MatCalendar),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_buttonDescriptionId\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      <span [attr.id]=\\\"_buttonDescriptionId\\\">{{periodButtonText}}</span>\\n      <div class=\\\"mat-calendar-arrow\\\"\\n           [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"></div>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatCalendar)]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n/** A calendar that is used as part of the datepicker. */\nclass MatCalendar {\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /** Whether the calendar should be started in month or year view. */\n        this.startView = 'month';\n        /** Emits when the currently selected date changes. */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._intlChanges = _intl.changes.subscribe(() => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** A date representing the period (month or year) to start the calendar in. */\n    get startAt() { return this._startAt; }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the calendar is in month view. */\n    get currentView() { return this._currentView; }\n    set currentView(value) {\n        const viewChangedResult = this._currentView !== value ? value : null;\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n        if (viewChangedResult) {\n            this.viewChanged.emit(viewChangedResult);\n        }\n    }\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    ngOnChanges(changes) {\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /** Focuses the active date. */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell(false);\n    }\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        this._getCurrentViewComponent()._init();\n    }\n    /** Handles date selection in the month view. */\n    _dateSelected(event) {\n        const date = event.value;\n        if (this.selected instanceof DateRange ||\n            (date && !this._dateAdapter.sameDate(date, this.selected))) {\n            this.selectedChange.emit(date);\n        }\n        this._userSelection.emit(event);\n    }\n    /** Handles year selection in the multiyear view. */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Handles month selection in the year view. */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Handles year/month selection in the multi-year/year views. */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /** Returns the component instance that corresponds to the current calendar view. */\n    _getCurrentViewComponent() {\n        // The return type is explicitly written as a union to ensure that the Closure compiler does\n        // not optimize calls to _init(). Without the explict return type, TypeScript narrows it to\n        // only the first component type. See https://github.com/angular/components/issues/22996.\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, 5);\n        ɵngcc0.ɵɵviewQuery(MatYearView, 5);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostAttrs: [1, \"mat-calendar\"], inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 5, consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"activeDateChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"activeDateChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]], template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 8, \"mat-month-view\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 6, \"mat-year-view\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 6, \"mat-multi-year-view\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, directives: [ɵngcc6.CdkPortalOutlet, ɵngcc5.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView, MatYearView, MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-abbr{text-decoration:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    viewChanged: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView,] }],\n    yearView: [{ type: ViewChild, args: [MatYearView,] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar',\n                template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-calendar'\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER],\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-abbr{text-decoration:none}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], viewChanged: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], startAt: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nconst matDatepickerAnimations = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        transition('void => enter-dropdown', animate('120ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(1, 0.8)' }),\n            style({ opacity: 1, transform: 'scale(1, 1)' })\n        ]))),\n        transition('void => enter-dialog', animate('150ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0.7)' }),\n            style({ transform: 'none', opacity: 1 })\n        ]))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/** @docs-private */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nconst _MatDatepickerContentBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Component used as the content for the datepicker overlay. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the overlay that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nclass MatDatepickerContent extends _MatDatepickerContentBase {\n    constructor(elementRef, _changeDetectorRef, _globalModel, _dateAdapter, _rangeSelectionStrategy, intl) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._globalModel = _globalModel;\n        this._dateAdapter = _dateAdapter;\n        this._rangeSelectionStrategy = _rangeSelectionStrategy;\n        this._subscriptions = new Subscription();\n        /** Emits when an animation has finished. */\n        this._animationDone = new Subject();\n        /** Portal with projected action buttons. */\n        this._actionsPortal = null;\n        this._closeButtonText = intl.closeCalendarLabel;\n    }\n    ngOnInit() {\n        // If we have actions, clone the model so that we have the ability to cancel the selection,\n        // otherwise update the global model directly. Note that we want to assign this as soon as\n        // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n        this._model = this._actionsPortal ? this._globalModel.clone() : this._globalModel;\n        this._animationState = this.datepicker.touchUi ? 'enter-dialog' : 'enter-dropdown';\n    }\n    ngAfterViewInit() {\n        this._subscriptions.add(this.datepicker.stateChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._calendar.focusActiveCell();\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        this._animationDone.complete();\n    }\n    _handleUserSelection(event) {\n        const selection = this._model.selection;\n        const value = event.value;\n        const isRange = selection instanceof DateRange;\n        // If we're selecting a range and we have a selection strategy, always pass the value through\n        // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n        // A null value when picking a range means that the user cancelled the selection (e.g. by\n        // pressing escape), whereas when selecting a single value it means that the value didn't\n        // change. This isn't very intuitive, but it's here for backwards-compatibility.\n        if (isRange && this._rangeSelectionStrategy) {\n            const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n            this._model.updateSelection(newSelection, this);\n        }\n        else if (value && (isRange ||\n            !this._dateAdapter.sameDate(value, selection))) {\n            this._model.add(value);\n        }\n        // Delegate closing the overlay to the actions.\n        if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n            this.datepicker.close();\n        }\n    }\n    _startExitAnimation() {\n        this._animationState = 'void';\n        this._changeDetectorRef.markForCheck();\n    }\n    _getSelected() {\n        return this._model.selection;\n    }\n    /** Applies the current pending selection to the global model. */\n    _applyPendingSelection() {\n        if (this._model !== this._globalModel) {\n            this._globalModel.updateSelection(this._model.selection, this);\n        }\n    }\n}\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatDateSelectionModel), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl)); };\nMatDatepickerContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-content\"], hostVars: 3, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transformPanel.done\", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler() { return ctx._animationDone.next(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transformPanel\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 20, consts: [[\"cdkTrapFocus\", \"\", 1, \"mat-datepicker-content-container\"], [3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"yearSelected\", \"monthSelected\", \"viewChanged\", \"_userSelection\"], [3, \"cdkPortalOutlet\"], [\"type\", \"button\", \"mat-raised-button\", \"\", 1, \"mat-datepicker-close-button\", 3, \"color\", \"focus\", \"blur\", \"click\"]], template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"mat-calendar\", 1);\n        ɵngcc0.ɵɵlistener(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_1_listener($event) { return ctx.datepicker._selectYear($event); })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_1_listener($event) { return ctx.datepicker._selectMonth($event); })(\"viewChanged\", function MatDatepickerContent_Template_mat_calendar_viewChanged_1_listener($event) { return ctx.datepicker._viewChanged($event); })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_1_listener($event) { return ctx._handleUserSelection($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerContent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"button\", 3);\n        ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerContent_Template_button_focus_3_listener() { return ctx._closeButtonFocused = true; })(\"blur\", function MatDatepickerContent_Template_button_blur_3_listener() { return ctx._closeButtonFocused = false; })(\"click\", function MatDatepickerContent_Template_button_click_3_listener() { return ctx.datepicker.close(); });\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-container-with-actions\", ctx._actionsPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._getMinDate())(\"maxDate\", ctx.datepicker._getMaxDate())(\"dateFilter\", ctx.datepicker._getDateFilter())(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx._getSelected())(\"dateClass\", ctx.datepicker.dateClass)(\"comparisonStart\", ctx.comparisonStart)(\"comparisonEnd\", ctx.comparisonEnd)(\"@fadeInCalendar\", \"enter\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._actionsPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"cdk-visually-hidden\", !ctx._closeButtonFocused);\n        ɵngcc0.ɵɵproperty(\"color\", ctx.color || \"primary\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx._closeButtonText);\n    } }, directives: [ɵngcc5.CdkTrapFocus, MatCalendar, ɵngcc1.NgClass, ɵngcc6.CdkPortalOutlet, ɵngcc4.MatButton], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatDateSelectionModel },\n    { type: DateAdapter },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_RANGE_SELECTION_STRATEGY,] }] },\n    { type: MatDatepickerIntl }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-content',\n                template: \"<div\\n  cdkTrapFocus\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '_animationState',\n                    '(@transformPanel.done)': '_animationDone.next()',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color'],\n                styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatDateSelectionModel }, { type: ɵngcc2.DateAdapter }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n            }] }, { type: MatDatepickerIntl }]; }, { _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar]\n        }] }); })();\n/** Base class for a datepicker. */\nclass MatDatepickerBase {\n    constructor(\n    /**\n     * @deprecated `_dialog` parameter is no longer being used and it will be removed.\n     * @breaking-change 13.0.0\n     */\n    _dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document, _model) {\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._model = _model;\n        this._inputStateChanges = Subscription.EMPTY;\n        /** The view that the calendar should start in. */\n        this.startView = 'month';\n        this._touchUi = false;\n        /** Preferred position of the datepicker in the X axis. */\n        this.xPosition = 'start';\n        /** Preferred position of the datepicker in the Y axis. */\n        this.yPosition = 'below';\n        this._restoreFocus = true;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when the datepicker has been opened. */\n        this.openedStream = new EventEmitter();\n        /** Emits when the datepicker has been closed. */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /** The id for the datepicker calendar. */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        /** The element that was focused before the datepicker was opened. */\n        this._focusedElementBeforeOpen = null;\n        /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n        this._backdropHarnessClass = `${this.id}-backdrop`;\n        /** Emits when the datepicker's state changes. */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** The date to open the calendar to initially. */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** Color palette to use on the datepicker's calendar. */\n    get color() {\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a dropdown and elements have more padding to allow for bigger touch targets.\n     */\n    get touchUi() { return this._touchUi; }\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /** Whether the datepicker pop-up should be disabled. */\n    get disabled() {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /**\n     * Whether to restore focus to the previously-focused element when the calendar is closed.\n     * Note that automatic focus restoration is an accessibility feature and it is recommended that\n     * you provide your own equivalent, if you decide to turn it off.\n     */\n    get restoreFocus() { return this._restoreFocus; }\n    set restoreFocus(value) {\n        this._restoreFocus = coerceBooleanProperty(value);\n    }\n    /**\n     * Classes to be passed to the date picker panel.\n     * Supports string and string array values, similar to `ngClass`.\n     */\n    get panelClass() { return this._panelClass; }\n    set panelClass(value) {\n        this._panelClass = coerceStringArray(value);\n    }\n    /** Whether the calendar is open. */\n    get opened() { return this._opened; }\n    set opened(value) {\n        coerceBooleanProperty(value) ? this.open() : this.close();\n    }\n    /** The minimum selectable date. */\n    _getMinDate() {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n    /** The maximum selectable date. */\n    _getMaxDate() {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n    _getDateFilter() {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n    ngOnChanges(changes) {\n        const positionChange = changes['xPosition'] || changes['yPosition'];\n        if (positionChange && !positionChange.firstChange && this._overlayRef) {\n            const positionStrategy = this._overlayRef.getConfig().positionStrategy;\n            if (positionStrategy instanceof FlexibleConnectedPositionStrategy) {\n                this._setConnectedPositions(positionStrategy);\n                if (this.opened) {\n                    this._overlayRef.updatePosition();\n                }\n            }\n        }\n        this.stateChanges.next(undefined);\n    }\n    ngOnDestroy() {\n        this._destroyOverlay();\n        this.close();\n        this._inputStateChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Selects the given date */\n    select(date) {\n        this._model.add(date);\n    }\n    /** Emits the selected year in multiyear view */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Emits selected month in year view */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Emits changed view */\n    _viewChanged(view) {\n        this.viewChanged.emit(view);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     * @returns Selection model that the input should hook itself up to.\n     */\n    registerInput(input) {\n        if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._inputStateChanges.unsubscribe();\n        this.datepickerInput = input;\n        this._inputStateChanges =\n            input.stateChanges.subscribe(() => this.stateChanges.next(undefined));\n        return this._model;\n    }\n    /**\n     * Registers a portal containing action buttons with the datepicker.\n     * @param portal Portal to be registered.\n     */\n    registerActions(portal) {\n        if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single actions row.');\n        }\n        this._actionsPortal = portal;\n    }\n    /**\n     * Removes a portal containing action buttons from the datepicker.\n     * @param portal Portal to be removed.\n     */\n    removeActions(portal) {\n        if (portal === this._actionsPortal) {\n            this._actionsPortal = null;\n        }\n    }\n    /** Open the calendar. */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        this._focusedElementBeforeOpen = _getFocusedElementPierceShadowDom();\n        this._openOverlay();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /** Close the calendar. */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._componentRef) {\n            const instance = this._componentRef.instance;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe(() => this._destroyOverlay());\n        }\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        };\n        if (this._restoreFocus && this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /** Applies the current pending selection on the overlay to the model. */\n    _applyPendingSelection() {\n        var _a, _b;\n        (_b = (_a = this._componentRef) === null || _a === void 0 ? void 0 : _a.instance) === null || _b === void 0 ? void 0 : _b._applyPendingSelection();\n    }\n    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n    _forwardContentValues(instance) {\n        instance.datepicker = this;\n        instance.color = this.color;\n        instance._actionsPortal = this._actionsPortal;\n    }\n    /** Opens the overlay with the calendar. */\n    _openOverlay() {\n        this._destroyOverlay();\n        const isDialog = this.touchUi;\n        const labelId = this.datepickerInput.getOverlayLabelId();\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        const overlayRef = this._overlayRef = this._overlay.create(new OverlayConfig({\n            positionStrategy: isDialog ? this._getDialogStrategy() : this._getDropdownStrategy(),\n            hasBackdrop: true,\n            backdropClass: [\n                isDialog ? 'cdk-overlay-dark-backdrop' : 'mat-overlay-transparent-backdrop',\n                this._backdropHarnessClass\n            ],\n            direction: this._dir,\n            scrollStrategy: isDialog ? this._overlay.scrollStrategies.block() : this._scrollStrategy(),\n            panelClass: `mat-datepicker-${isDialog ? 'dialog' : 'popup'}`,\n        }));\n        const overlayElement = overlayRef.overlayElement;\n        overlayElement.setAttribute('role', 'dialog');\n        if (labelId) {\n            overlayElement.setAttribute('aria-labelledby', labelId);\n        }\n        if (isDialog) {\n            overlayElement.setAttribute('aria-modal', 'true');\n        }\n        this._getCloseStream(overlayRef).subscribe(event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        });\n        this._componentRef = overlayRef.attach(portal);\n        this._forwardContentValues(this._componentRef.instance);\n        // Update the position once the calendar has rendered. Only relevant in dropdown mode.\n        if (!isDialog) {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => overlayRef.updatePosition());\n        }\n    }\n    /** Destroys the current overlay. */\n    _destroyOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = this._componentRef = null;\n        }\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDialogStrategy() {\n        return this._overlay.position().global().centerHorizontally().centerVertically();\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDropdownStrategy() {\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition();\n        return this._setConnectedPositions(strategy);\n    }\n    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n    _setConnectedPositions(strategy) {\n        const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n        const secondaryX = primaryX === 'start' ? 'end' : 'start';\n        const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n        const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n        return strategy.withPositions([\n            {\n                originX: primaryX,\n                originY: secondaryY,\n                overlayX: primaryX,\n                overlayY: primaryY\n            },\n            {\n                originX: primaryX,\n                originY: primaryY,\n                overlayX: primaryX,\n                overlayY: secondaryY\n            },\n            {\n                originX: secondaryX,\n                originY: secondaryY,\n                overlayX: secondaryX,\n                overlayY: primaryY\n            },\n            {\n                originX: secondaryX,\n                originY: primaryY,\n                overlayX: secondaryX,\n                overlayY: secondaryY\n            }\n        ]);\n    }\n    /** Gets an observable that will emit when the overlay is supposed to be closed. */\n    _getCloseStream(overlayRef) {\n        return merge(overlayRef.backdropClick(), overlayRef.detachments(), overlayRef.keydownEvents().pipe(filter(event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return (event.keyCode === ESCAPE && !hasModifierKey(event)) || (this.datepickerInput &&\n                hasModifierKey(event, 'altKey') && event.keyCode === UP_ARROW);\n        })));\n    }\n}\nMatDatepickerBase.ɵfac = function MatDatepickerBase_Factory(t) { return new (t || MatDatepickerBase)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDateSelectionModel)); };\nMatDatepickerBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerBase, inputs: { startView: \"startView\", xPosition: \"xPosition\", yPosition: \"yPosition\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", restoreFocus: \"restoreFocus\", panelClass: \"panelClass\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", openedStream: \"opened\", closedStream: \"closed\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatDatepickerBase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDateSelectionModel }\n];\nMatDatepickerBase.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    restoreFocus: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    viewChanged: [{ type: Output }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    panelClass: [{ type: Input }],\n    opened: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerBase, [{\n        type: Directive\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc7.Overlay }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDateSelectionModel }]; }, { startView: [{\n            type: Input\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], viewChanged: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], startAt: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], touchUi: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], restoreFocus: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], calendarHeaderComponent: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\nclass MatDatepicker extends MatDatepickerBase {\n}\nMatDatepicker.ɵfac = /*@__PURE__*/ function () { let ɵMatDatepicker_BaseFactory; return function MatDatepicker_Factory(t) { return (ɵMatDatepicker_BaseFactory || (ɵMatDatepicker_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatDatepicker)))(t || MatDatepicker); }; }();\nMatDatepicker.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], exportAs: [\"matDatepicker\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n            { provide: MatDatepickerBase, useExisting: MatDatepicker },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n                    { provide: MatDatepickerBase, useExisting: MatDatepicker },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n    constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    target, \n    /** Reference to the native input element associated with the datepicker input. */\n    targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/** Base class for datepicker inputs. */\nclass MatDatepickerInputBase {\n    constructor(_elementRef, _dateAdapter, _dateFormats) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        /** Emits when a `change` event is fired on this `<input>`. */\n        this.dateChange = new EventEmitter();\n        /** Emits when an `input` event is fired on this `<input>`. */\n        this.dateInput = new EventEmitter();\n        /** Emits when the internal state has changed */\n        this.stateChanges = new Subject();\n        this._onTouched = () => { };\n        this._validatorOnChange = () => { };\n        this._cvaOnChange = () => { };\n        this._valueChangesSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /** The form control validator for whether the input parses. */\n        this._parseValidator = () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        };\n        /** The form control validator for the date filter. */\n        this._filterValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !controlValue || this._matchesFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        };\n        /** The form control validator for the min date. */\n        this._minValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const min = this._getMinDate();\n            return (!min || !controlValue ||\n                this._dateAdapter.compareDate(min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': min, 'actual': controlValue } };\n        };\n        /** The form control validator for the max date. */\n        this._maxValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const max = this._getMaxDate();\n            return (!max || !controlValue ||\n                this._dateAdapter.compareDate(max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': max, 'actual': controlValue } };\n        };\n        /** Whether the last value set on the input was valid. */\n        this._lastValueValid = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n            this._assignValueProgrammatically(this.value);\n        });\n    }\n    /** The value of the input. */\n    get value() {\n        return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n    }\n    set value(value) {\n        this._assignValueProgrammatically(value);\n    }\n    /** Whether the datepicker-input is disabled. */\n    get disabled() { return !!this._disabled || this._parentDisabled(); }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n        // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n        // element has been inserted.\n        if (newValue && this._isInitialized && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /** Gets the base validator functions. */\n    _getValidators() {\n        return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n    }\n    /** Registers a date selection model with the input. */\n    _registerModel(model) {\n        this._model = model;\n        this._valueChangesSubscription.unsubscribe();\n        if (this._pendingValue) {\n            this._assignValue(this._pendingValue);\n        }\n        this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n            if (this._shouldHandleChangeEvent(event)) {\n                const value = this._getValueFromModel(event.selection);\n                this._lastValueValid = this._isValidValue(value);\n                this._cvaOnChange(value);\n                this._onTouched();\n                this._formatValue(value);\n                this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            }\n        });\n    }\n    ngAfterViewInit() {\n        this._isInitialized = true;\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._valueChangesSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /** @docs-private */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this._assignValueProgrammatically(value);\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _onKeydown(event) {\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._openPopup();\n            event.preventDefault();\n        }\n    }\n    _onInput(value) {\n        const lastValueWasValid = this._lastValueValid;\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = this._isValidValue(date);\n        date = this._dateAdapter.getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this.value)) {\n            this._assignValue(date);\n            this._cvaOnChange(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            // Call the CVA change handler for invalid values\n            // since this is what marks the control as dirty.\n            if (value && !this.value) {\n                this._cvaOnChange(date);\n            }\n            if (lastValueWasValid !== this._lastValueValid) {\n                this._validatorOnChange();\n            }\n        }\n    }\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /** Handles blur events on the input. */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /** Formats a value and sets it on the input element. */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /** Assigns a value to the model. */\n    _assignValue(value) {\n        // We may get some incoming values before the model was\n        // assigned. Save the value so that we can assign it later.\n        if (this._model) {\n            this._assignValueToModel(value);\n            this._pendingValue = null;\n        }\n        else {\n            this._pendingValue = value;\n        }\n    }\n    /** Whether a value is considered valid. */\n    _isValidValue(value) {\n        return !value || this._dateAdapter.isValid(value);\n    }\n    /**\n     * Checks whether a parent control is disabled. This is in place so that it can be overridden\n     * by inputs extending this one which can be placed inside of a group that can be disabled.\n     */\n    _parentDisabled() {\n        return false;\n    }\n    /** Programmatically assigns a value to the input. */\n    _assignValueProgrammatically(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = this._isValidValue(value);\n        value = this._dateAdapter.getValidDateOrNull(value);\n        this._assignValue(value);\n        this._formatValue(value);\n    }\n    /** Gets whether a value matches the current date filter. */\n    _matchesFilter(value) {\n        const filter = this._getDateFilter();\n        return !filter || filter(value);\n    }\n}\nMatDatepickerInputBase.ɵfac = function MatDatepickerInputBase_Factory(t) { return new (t || MatDatepickerInputBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatDatepickerInputBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInputBase, inputs: { value: \"value\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatDatepickerInputBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\nMatDatepickerInputBase.propDecorators = {\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInputBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, { dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], value: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n    const keys = Object.keys(changes);\n    for (let key of keys) {\n        const { previousValue, currentValue } = changes[key];\n        if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n            if (!adapter.sameDate(previousValue, currentValue)) {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/** Directive used to connect an input to a MatDatepicker. */\nclass MatDatepickerInput extends MatDatepickerInputBase {\n    constructor(elementRef, dateAdapter, dateFormats, _formField) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        this._validator = Validators.compose(super._getValidators());\n    }\n    /** The datepicker that this input is associated with. */\n    set matDatepicker(datepicker) {\n        if (datepicker) {\n            this._datepicker = datepicker;\n            this._closedSubscription = datepicker.closedStream.subscribe(() => this._onTouched());\n            this._registerModel(datepicker.registerInput(this));\n        }\n    }\n    /** The minimum valid date. */\n    get min() { return this._min; }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** The maximum valid date. */\n    get max() { return this._max; }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** Function that can be used to filter out dates within the datepicker. */\n    get dateFilter() { return this._dateFilter; }\n    set dateFilter(value) {\n        const wasMatchingValue = this._matchesFilter(this.value);\n        this._dateFilter = value;\n        if (this._matchesFilter(this.value) !== wasMatchingValue) {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n        if (this._formField) {\n            return this._formField.getLabelId();\n        }\n        return this._elementRef.nativeElement.getAttribute('aria-labelledby');\n    }\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the value at which the calendar should start. */\n    getStartValue() {\n        return this.value;\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._closedSubscription.unsubscribe();\n    }\n    /** Opens the associated datepicker. */\n    _openPopup() {\n        if (this._datepicker) {\n            this._datepicker.open();\n        }\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            this._model.updateSelection(value, this);\n        }\n    }\n    /** Gets the input's minimum date. */\n    _getMinDate() {\n        return this._min;\n    }\n    /** Gets the input's maximum date. */\n    _getMaxDate() {\n        return this._max;\n    }\n    /** Gets the input's date filtering function. */\n    _getDateFilter() {\n        return this._dateFilter;\n    }\n    _shouldHandleChangeEvent(event) {\n        return event.source !== this;\n    }\n}\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatDatepickerInput.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], hostAttrs: [1, \"mat-datepicker-input\"], hostVars: 6, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatDatepickerInput_change_HostBindingHandler() { return ctx._onChange(); })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null)(\"data-mat-calendar\", ctx._datepicker ? ctx._datepicker.id : null);\n    } }, inputs: { matDatepicker: \"matDatepicker\", min: \"min\", max: \"max\", dateFilter: [\"matDatepickerFilter\", \"dateFilter\"] }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    dateFilter: [{ type: Input, args: ['matDatepickerFilter',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    'class': 'mat-datepicker-input',\n                    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    // Used by the test harness to tie this input to its calendar. We can't depend on\n                    // `aria-owns` for this, because it's only defined while the calendar is open.\n                    '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { matDatepicker: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input,\n            args: ['matDatepickerFilter']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); };\nMatDatepickerToggleIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null); })();\nclass MatDatepickerToggle {\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /** Whether the toggle button is disabled. */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    _watchStateChanges() {\n        const datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : of();\n        const inputStateChanged = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.stateChanges : of();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n}\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatDatepickerToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-toggle\"], hostVars: 8, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_click_HostBindingHandler($event) { return ctx._open($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", null)(\"data-mat-calendar\", ctx.datepicker ? ctx.datepicker.id : null);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 4, vars: 6, consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]], template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx.ariaLabel || ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc1.NgIf], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon,] }],\n    _button: [{ type: ViewChild, args: ['button',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-toggle',\n                template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    // Used by the test harness to tie this toggle to its datepicker.\n                    '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n                    // Bind the `click` on the host, rather than the inner `button`, so that we can call\n                    // `stopPropagation` on it without affecting the user's `click` handlers. We need to stop\n                    // it so that the input doesn't get focused automatically by the form field (See #21836).\n                    '(click)': '_open($event)'\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], disableRipple: [{\n            type: Input\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon]\n        }], _button: [{\n            type: ViewChild,\n            args: ['button']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nconst MAT_DATE_RANGE_INPUT_PARENT = new InjectionToken('MAT_DATE_RANGE_INPUT_PARENT');\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\nclass MatDateRangeInputPartBase extends MatDatepickerInputBase {\n    constructor(_rangeInput, elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._rangeInput = _rangeInput;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._injector = _injector;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n    }\n    ngOnInit() {\n        // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n        // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n        // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n        // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n        // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n        // everything has been resolved.\n        // tslint:disable-next-line:no-bitwise\n        const ngControl = this._injector.get(NgControl, null, InjectFlags.Self | InjectFlags.Optional);\n        if (ngControl) {\n            this.ngControl = ngControl;\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /** Gets whether the input is empty. */\n    isEmpty() {\n        return this._elementRef.nativeElement.value.length === 0;\n    }\n    /** Gets the placeholder of the input. */\n    _getPlaceholder() {\n        return this._elementRef.nativeElement.placeholder;\n    }\n    /** Focuses the input. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /** Handles `input` events on the input element. */\n    _onInput(value) {\n        super._onInput(value);\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Opens the datepicker associated with the input. */\n    _openPopup() {\n        this._rangeInput._openDatepicker();\n    }\n    /** Gets the minimum date from the range input. */\n    _getMinDate() {\n        return this._rangeInput.min;\n    }\n    /** Gets the maximum date from the range input. */\n    _getMaxDate() {\n        return this._rangeInput.max;\n    }\n    /** Gets the date filter function from the range input. */\n    _getDateFilter() {\n        return this._rangeInput.dateFilter;\n    }\n    _parentDisabled() {\n        return this._rangeInput._groupDisabled;\n    }\n    _shouldHandleChangeEvent({ source }) {\n        return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n    }\n    _assignValueProgrammatically(value) {\n        super._assignValueProgrammatically(value);\n        const opposite = (this === this._rangeInput._startInput ? this._rangeInput._endInput :\n            this._rangeInput._startInput);\n        opposite === null || opposite === void 0 ? void 0 : opposite._validatorOnChange();\n    }\n}\nMatDateRangeInputPartBase.ɵfac = function MatDateRangeInputPartBase_Factory(t) { return new (t || MatDateRangeInputPartBase)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatDateRangeInputPartBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDateRangeInputPartBase, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatDateRangeInputPartBase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangeInputPartBase, [{\n        type: Directive\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc9.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc9.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\nconst _MatDateRangeInputBase = mixinErrorState(MatDateRangeInputPartBase);\n/** Input for entering the start date in a `mat-date-range-input`. */\nclass MatStartDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n        // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n        // constructor once ViewEngine is removed.\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the start date isn't after the end date. */\n        this._startValidator = (control) => {\n            const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const end = this._model ? this._model.selection.end : null;\n            return (!start || !end ||\n                this._dateAdapter.compareDate(start, end) <= 0) ?\n                null : { 'matStartDateInvalid': { 'end': end, 'actual': start } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._startValidator]);\n    }\n    ngOnInit() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngOnInit();\n    }\n    ngDoCheck() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngDoCheck();\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.start;\n    }\n    _shouldHandleChangeEvent(change) {\n        var _a;\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !((_a = change.oldValue) === null || _a === void 0 ? void 0 : _a.start) ? !!change.selection.start :\n                !change.selection.start ||\n                    !!this._dateAdapter.compareDate(change.oldValue.start, change.selection.start);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(value, this._model.selection.end);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _formatValue(value) {\n        super._formatValue(value);\n        // Any time the input value is reformatted we need to tell the parent.\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Gets the value that should be used when mirroring the input's size. */\n    getMirrorValue() {\n        const element = this._elementRef.nativeElement;\n        const value = element.value;\n        return value.length > 0 ? value : element.placeholder;\n    }\n}\nMatStartDate.ɵfac = function MatStartDate_Factory(t) { return new (t || MatStartDate)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatStartDate.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStartDate, selectors: [[\"input\", \"matStartDate\", \"\"]], hostAttrs: [\"type\", \"text\", 1, \"mat-start-date\", \"mat-date-range-input-inner\"], hostVars: 6, hostBindings: function MatStartDate_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatStartDate_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatStartDate_change_HostBindingHandler() { return ctx._onChange(); })(\"keydown\", function MatStartDate_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"blur\", function MatStartDate_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._rangeInput.id)(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n    } }, inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n            { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatStartDate.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStartDate, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matStartDate]',\n                host: {\n                    'class': 'mat-start-date mat-date-range-input-inner',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(keydown)': '_onKeydown($event)',\n                    '[attr.id]': '_rangeInput.id',\n                    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                    '(blur)': '_onBlur()',\n                    'type': 'text'\n                },\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n                    { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true }\n                ],\n                // These need to be specified explicitly, because some tooling doesn't\n                // seem to pick them up from the base class. See #20932.\n                outputs: ['dateChange', 'dateInput'],\n                inputs: ['errorStateMatcher']\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc9.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc9.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\n/** Input for entering the end date in a `mat-date-range-input`. */\nclass MatEndDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n        // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n        // constructor once ViewEngine is removed.\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the end date isn't before the start date. */\n        this._endValidator = (control) => {\n            const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const start = this._model ? this._model.selection.start : null;\n            return (!end || !start ||\n                this._dateAdapter.compareDate(end, start) >= 0) ?\n                null : { 'matEndDateInvalid': { 'start': start, 'actual': end } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._endValidator]);\n    }\n    ngOnInit() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngOnInit();\n    }\n    ngDoCheck() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngDoCheck();\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.end;\n    }\n    _shouldHandleChangeEvent(change) {\n        var _a;\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !((_a = change.oldValue) === null || _a === void 0 ? void 0 : _a.end) ? !!change.selection.end :\n                !change.selection.end ||\n                    !!this._dateAdapter.compareDate(change.oldValue.end, change.selection.end);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(this._model.selection.start, value);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _onKeydown(event) {\n        // If the user is pressing backspace on an empty end input, move focus back to the start.\n        if (event.keyCode === BACKSPACE && !this._elementRef.nativeElement.value) {\n            this._rangeInput._startInput.focus();\n        }\n        super._onKeydown(event);\n    }\n}\nMatEndDate.ɵfac = function MatEndDate_Factory(t) { return new (t || MatEndDate)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatEndDate.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatEndDate, selectors: [[\"input\", \"matEndDate\", \"\"]], hostAttrs: [\"type\", \"text\", 1, \"mat-end-date\", \"mat-date-range-input-inner\"], hostVars: 5, hostBindings: function MatEndDate_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatEndDate_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatEndDate_change_HostBindingHandler() { return ctx._onChange(); })(\"keydown\", function MatEndDate_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"blur\", function MatEndDate_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n    } }, inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n            { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatEndDate.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatEndDate, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matEndDate]',\n                host: {\n                    'class': 'mat-end-date mat-date-range-input-inner',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(keydown)': '_onKeydown($event)',\n                    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                    '(blur)': '_onBlur()',\n                    'type': 'text'\n                },\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n                    { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true }\n                ],\n                // These need to be specified explicitly, because some tooling doesn't\n                // seem to pick them up from the base class. See #20932.\n                outputs: ['dateChange', 'dateInput'],\n                inputs: ['errorStateMatcher']\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc9.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc9.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nclass MatDateRangeInput {\n    constructor(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        /** Unique ID for the input. */\n        this.id = `mat-date-range-input-${nextUniqueId++}`;\n        /** Whether the control is focused. */\n        this.focused = false;\n        /** Name of the form control. */\n        this.controlType = 'mat-date-range-input';\n        this._groupDisabled = false;\n        /** Value for the `aria-describedby` attribute of the inputs. */\n        this._ariaDescribedBy = null;\n        /** Separator text to be shown between the inputs. */\n        this.separator = '–';\n        /** Start of the comparison range that should be shown in the calendar. */\n        this.comparisonStart = null;\n        /** End of the comparison range that should be shown in the calendar. */\n        this.comparisonEnd = null;\n        /** Emits when the input's state has changed. */\n        this.stateChanges = new Subject();\n        if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        // The datepicker module can be used both with MDC and non-MDC form fields. We have\n        // to conditionally add the MDC input class so that the range picker looks correctly.\n        if (_formField === null || _formField === void 0 ? void 0 : _formField._elementRef.nativeElement.classList.contains('mat-mdc-form-field')) {\n            const classList = _elementRef.nativeElement.classList;\n            classList.add('mat-mdc-input-element');\n            classList.add('mat-mdc-form-field-control');\n        }\n        // TODO(crisbeto): remove `as any` after #18206 lands.\n        this.ngControl = control;\n    }\n    /** Current value of the range input. */\n    get value() {\n        return this._model ? this._model.selection : null;\n    }\n    /** Whether the control's label should float. */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n     * @docs-private\n     */\n    get placeholder() {\n        var _a, _b;\n        const start = ((_a = this._startInput) === null || _a === void 0 ? void 0 : _a._getPlaceholder()) || '';\n        const end = ((_b = this._endInput) === null || _b === void 0 ? void 0 : _b._getPlaceholder()) || '';\n        return (start || end) ? `${start} ${this.separator} ${end}` : '';\n    }\n    /** The range picker that this input is associated with. */\n    get rangePicker() { return this._rangePicker; }\n    set rangePicker(rangePicker) {\n        if (rangePicker) {\n            this._model = rangePicker.registerInput(this);\n            this._rangePicker = rangePicker;\n            this._closedSubscription.unsubscribe();\n            this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n                var _a, _b;\n                (_a = this._startInput) === null || _a === void 0 ? void 0 : _a._onTouched();\n                (_b = this._endInput) === null || _b === void 0 ? void 0 : _b._onTouched();\n            });\n            this._registerModel(this._model);\n        }\n    }\n    /** Whether the input is required. */\n    get required() { return !!this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Function that can be used to filter out dates within the date range picker. */\n    get dateFilter() { return this._dateFilter; }\n    set dateFilter(value) {\n        const start = this._startInput;\n        const end = this._endInput;\n        const wasMatchingStart = start && start._matchesFilter(start.value);\n        const wasMatchingEnd = end && end._matchesFilter(start.value);\n        this._dateFilter = value;\n        if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n            start._validatorOnChange();\n        }\n        if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n            end._validatorOnChange();\n        }\n    }\n    /** The minimum valid date. */\n    get min() { return this._min; }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._revalidate();\n        }\n    }\n    /** The maximum valid date. */\n    get max() { return this._max; }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._revalidate();\n        }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return (this._startInput && this._endInput) ?\n            (this._startInput.disabled && this._endInput.disabled) :\n            this._groupDisabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._groupDisabled) {\n            this._groupDisabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n        if (this._startInput && this._endInput) {\n            return this._startInput.errorState || this._endInput.errorState;\n        }\n        return false;\n    }\n    /** Whether the datepicker input is empty. */\n    get empty() {\n        const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n        const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n        return startEmpty && endEmpty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    onContainerClick() {\n        if (!this.focused && !this.disabled) {\n            if (!this._model || !this._model.selection.start) {\n                this._startInput.focus();\n            }\n            else {\n                this._endInput.focus();\n            }\n        }\n    }\n    ngAfterContentInit() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._startInput) {\n                throw Error('mat-date-range-input must contain a matStartDate input');\n            }\n            if (!this._endInput) {\n                throw Error('mat-date-range-input must contain a matEndDate input');\n            }\n        }\n        if (this._model) {\n            this._registerModel(this._model);\n        }\n        // We don't need to unsubscribe from this, because we\n        // know that the input streams will be completed on destroy.\n        merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n            this.stateChanges.next(undefined);\n        });\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._closedSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Gets the date at which the calendar should start. */\n    getStartValue() {\n        return this.value ? this.value.start : null;\n    }\n    /** Gets the input's theme palette. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the element to which the calendar overlay should be attached. */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n        return this._formField ? this._formField.getLabelId() : null;\n    }\n    /** Gets the value that is used to mirror the state input. */\n    _getInputMirrorValue() {\n        return this._startInput ? this._startInput.getMirrorValue() : '';\n    }\n    /** Whether the input placeholders should be hidden. */\n    _shouldHidePlaceholders() {\n        return this._startInput ? !this._startInput.isEmpty() : false;\n    }\n    /** Handles the value in one of the child inputs changing. */\n    _handleChildValueChange() {\n        this.stateChanges.next(undefined);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Opens the date range picker associated with the input. */\n    _openDatepicker() {\n        if (this._rangePicker) {\n            this._rangePicker.open();\n        }\n    }\n    /** Whether the separate text should be hidden. */\n    _shouldHideSeparator() {\n        return (!this._formField || (this._formField.getLabelId() &&\n            !this._formField._shouldLabelFloat())) && this.empty;\n    }\n    /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n    _getAriaLabelledby() {\n        const formField = this._formField;\n        return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n    }\n    /** Updates the focused state of the range input. */\n    _updateFocus(origin) {\n        this.focused = origin !== null;\n        this.stateChanges.next();\n    }\n    /** Re-runs the validators on the start/end inputs. */\n    _revalidate() {\n        if (this._startInput) {\n            this._startInput._validatorOnChange();\n        }\n        if (this._endInput) {\n            this._endInput._validatorOnChange();\n        }\n    }\n    /** Registers the current date selection model with the start/end inputs. */\n    _registerModel(model) {\n        if (this._startInput) {\n            this._startInput._registerModel(model);\n        }\n        if (this._endInput) {\n            this._endInput._registerModel(model);\n        }\n    }\n}\nMatDateRangeInput.ɵfac = function MatDateRangeInput_Factory(t) { return new (t || MatDateRangeInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.ControlContainer, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatDateRangeInput.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDateRangeInput, selectors: [[\"mat-date-range-input\"]], contentQueries: function MatDateRangeInput_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStartDate, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatEndDate, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._startInput = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._endInput = _t.first);\n    } }, hostAttrs: [\"role\", \"group\", 1, \"mat-date-range-input\"], hostVars: 8, hostBindings: function MatDateRangeInput_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", null)(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-describedby\", ctx._ariaDescribedBy)(\"data-mat-calendar\", ctx.rangePicker ? ctx.rangePicker.id : null);\n        ɵngcc0.ɵɵclassProp(\"mat-date-range-input-hide-placeholders\", ctx._shouldHidePlaceholders())(\"mat-date-range-input-required\", ctx.required);\n    } }, inputs: { separator: \"separator\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\", rangePicker: \"rangePicker\", required: \"required\", dateFilter: \"dateFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, exportAs: [\"matDateRangeInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n            { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c6, decls: 9, vars: 4, consts: [[\"cdkMonitorSubtreeFocus\", \"\", 1, \"mat-date-range-input-container\", 3, \"cdkFocusChange\"], [1, \"mat-date-range-input-start-wrapper\"], [\"aria-hidden\", \"true\", 1, \"mat-date-range-input-mirror\"], [1, \"mat-date-range-input-separator\"], [1, \"mat-date-range-input-end-wrapper\"]], template: function MatDateRangeInput_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"cdkFocusChange\", function MatDateRangeInput_Template_div_cdkFocusChange_0_listener($event) { return ctx._updateFocus($event); });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"span\", 2);\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"span\", 3);\n        ɵngcc0.ɵɵtext(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 4);\n        ɵngcc0.ɵɵprojection(8, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵtextInterpolate(ctx._getInputMirrorValue());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-date-range-input-separator-hidden\", ctx._shouldHideSeparator());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.separator);\n    } }, directives: [ɵngcc5.CdkMonitorFocus], styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDateRangeInput.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Self }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDateRangeInput.propDecorators = {\n    rangePicker: [{ type: Input }],\n    required: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    separator: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    _startInput: [{ type: ContentChild, args: [MatStartDate,] }],\n    _endInput: [{ type: ContentChild, args: [MatEndDate,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangeInput, [{\n        type: Component,\n        args: [{\n                selector: 'mat-date-range-input',\n                template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\",\n                exportAs: 'matDateRangeInput',\n                host: {\n                    'class': 'mat-date-range-input',\n                    '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n                    '[class.mat-date-range-input-required]': 'required',\n                    '[attr.id]': 'null',\n                    'role': 'group',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-describedby]': '_ariaDescribedBy',\n                    // Used by the test harness to tie this input to its calendar. We can't depend on\n                    // `aria-owns` for this, because it's only defined while the calendar is open.\n                    '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n                    { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n                ],\n                styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc9.ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { separator: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], rangePicker: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _startInput: [{\n            type: ContentChild,\n            args: [MatStartDate]\n        }], _endInput: [{\n            type: ContentChild,\n            args: [MatEndDate]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\nclass MatDateRangePicker extends MatDatepickerBase {\n    _forwardContentValues(instance) {\n        super._forwardContentValues(instance);\n        const input = this.datepickerInput;\n        if (input) {\n            instance.comparisonStart = input.comparisonStart;\n            instance.comparisonEnd = input.comparisonEnd;\n        }\n    }\n}\nMatDateRangePicker.ɵfac = /*@__PURE__*/ function () { let ɵMatDateRangePicker_BaseFactory; return function MatDateRangePicker_Factory(t) { return (ɵMatDateRangePicker_BaseFactory || (ɵMatDateRangePicker_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatDateRangePicker)))(t || MatDateRangePicker); }; }();\nMatDateRangePicker.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDateRangePicker, selectors: [[\"mat-date-range-picker\"]], exportAs: [\"matDateRangePicker\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n            MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n            { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function MatDateRangePicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangePicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-date-range-picker',\n                template: '',\n                exportAs: 'matDateRangePicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n                    MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n                    { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that will close the datepicker and assign the current selection to the data model. */\nclass MatDatepickerApply {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n    _applySelection() {\n        this._datepicker._applyPendingSelection();\n        this._datepicker.close();\n    }\n}\nMatDatepickerApply.ɵfac = function MatDatepickerApply_Factory(t) { return new (t || MatDatepickerApply)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase)); };\nMatDatepickerApply.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerApply, selectors: [[\"\", \"matDatepickerApply\", \"\"], [\"\", \"matDateRangePickerApply\", \"\"]], hostBindings: function MatDatepickerApply_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerApply_click_HostBindingHandler() { return ctx._applySelection(); });\n    } } });\nMatDatepickerApply.ctorParameters = () => [\n    { type: MatDatepickerBase }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerApply, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerApply], [matDateRangePickerApply]',\n                host: { '(click)': '_applySelection()' }\n            }]\n    }], function () { return [{ type: MatDatepickerBase }]; }, null); })();\n/** Button that will close the datepicker and discard the current selection. */\nclass MatDatepickerCancel {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n}\nMatDatepickerCancel.ɵfac = function MatDatepickerCancel_Factory(t) { return new (t || MatDatepickerCancel)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase)); };\nMatDatepickerCancel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerCancel, selectors: [[\"\", \"matDatepickerCancel\", \"\"], [\"\", \"matDateRangePickerCancel\", \"\"]], hostBindings: function MatDatepickerCancel_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerCancel_click_HostBindingHandler() { return ctx._datepicker.close(); });\n    } } });\nMatDatepickerCancel.ctorParameters = () => [\n    { type: MatDatepickerBase }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerCancel, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerCancel], [matDateRangePickerCancel]',\n                host: { '(click)': '_datepicker.close()' }\n            }]\n    }], function () { return [{ type: MatDatepickerBase }]; }, null); })();\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\nclass MatDatepickerActions {\n    constructor(_datepicker, _viewContainerRef) {\n        this._datepicker = _datepicker;\n        this._viewContainerRef = _viewContainerRef;\n    }\n    ngAfterViewInit() {\n        this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        this._datepicker.registerActions(this._portal);\n    }\n    ngOnDestroy() {\n        var _a;\n        this._datepicker.removeActions(this._portal);\n        // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n        if (this._portal && this._portal.isAttached) {\n            (_a = this._portal) === null || _a === void 0 ? void 0 : _a.detach();\n        }\n    }\n}\nMatDatepickerActions.ɵfac = function MatDatepickerActions_Factory(t) { return new (t || MatDatepickerActions)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nMatDatepickerActions.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerActions, selectors: [[\"mat-datepicker-actions\"], [\"mat-date-range-picker-actions\"]], viewQuery: function MatDatepickerActions_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._template = _t.first);\n    } }, ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[1, \"mat-datepicker-actions\"]], template: function MatDatepickerActions_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatDatepickerActions_ng_template_0_Template, 2, 0, \"ng-template\");\n    } }, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDatepickerActions.ctorParameters = () => [\n    { type: MatDatepickerBase },\n    { type: ViewContainerRef }\n];\nMatDatepickerActions.propDecorators = {\n    _template: [{ type: ViewChild, args: [TemplateRef,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerActions, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-actions, mat-date-range-picker-actions',\n                template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerBase }, { type: ɵngcc0.ViewContainerRef }]; }, { _template: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵfac = function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); };\nMatDatepickerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ], imports: [[\n            CommonModule,\n            MatButtonModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n            MatCommonModule,\n        ], CdkScrollableModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                    MatDateRangeInput,\n                    MatStartDate,\n                    MatEndDate,\n                    MatDateRangePicker,\n                    MatDatepickerActions,\n                    MatDatepickerCancel,\n                    MatDatepickerApply\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                    MatDateRangeInput,\n                    MatStartDate,\n                    MatEndDate,\n                    MatDateRangePicker,\n                    MatDatepickerActions,\n                    MatDatepickerCancel,\n                    MatDatepickerApply\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule, MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerActions, MatDatepickerApply, MatDatepickerCancel, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_material_datepicker_datepicker_a, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER as ɵangular_material_src_material_datepicker_datepicker_b, MatDatepickerBase as ɵangular_material_src_material_datepicker_datepicker_c, MatDatepickerInputBase as ɵangular_material_src_material_datepicker_datepicker_d, MAT_DATE_RANGE_INPUT_PARENT as ɵangular_material_src_material_datepicker_datepicker_e };\n\n//# sourceMappingURL=datepicker.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Attribute, ElementRef, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, Optional, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor(ariaLive, elementRef) {\n        this.id = `mat-error-${nextUniqueId$2++}`;\n        // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n        // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n        if (!ariaLive) {\n            elementRef.nativeElement.setAttribute('aria-live', 'polite');\n        }\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(ɵngcc0.ɵɵinjectAttribute('aria-live'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatError.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"aria-atomic\", \"true\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_ERROR, useExisting: MatError }])] });\nMatError.ctorParameters = () => [\n    { type: String, decorators: [{ type: Attribute, args: ['aria-live',] }] },\n    { type: ElementRef }\n];\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    '[attr.id]': 'id',\n                    'aria-atomic': 'true'\n                },\n                providers: [{ provide: MAT_ERROR, useExisting: MatError }]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-live']\n            }] }, { type: ɵngcc0.ElementRef }]; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-5px)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-hint-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: _MAT_HINT, useExisting: MatHint }])] });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                },\n                providers: [{ provide: _MAT_HINT, useExisting: MatHint }]\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_PREFIX, useExisting: MatPrefix }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]',\n                providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SUFFIX, useExisting: MatSuffix }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]',\n                providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nconst _MatFormFieldBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldBase {\n    constructor(_elementRef, _changeDetectorRef, \n    /**\n     * @deprecated `_labelOptions` parameter no longer being used. To be removed.\n     * @breaking-change 12.0.0\n     */\n    // Use `ElementRef` here so Angular has something to inject.\n    _labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId++}`;\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() { return this._appearance; }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /** Text for the form field hint. */\n    get hintLabel() { return this._hintLabel; }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat());\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 7);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 40, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MAT_ERROR, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [_MAT_HINT, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MAT_PREFIX, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MAT_SUFFIX, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MAT_ERROR, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [_MAT_HINT, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MAT_PREFIX, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MAT_SUFFIX, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); };\nMatFormFieldModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nimport * as ɵngcc5 from '@angular/material/form-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    get matAutosizeMinRows() { return this.minRows; }\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    get matAutosizeMaxRows() { return this.maxRows; }\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    get matAutosize() { return this.enabled; }\n    set matAutosize(value) { this.enabled = value; }\n    get matTextareaAutosize() { return this.enabled; }\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = /*@__PURE__*/ function () { let ɵMatTextareaAutosize_BaseFactory; return function MatTextareaAutosize_Factory(t) { return (ɵMatTextareaAutosize_BaseFactory || (ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize)))(t || MatTextareaAutosize); }; }();\nMatTextareaAutosize.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nconst _MatInputBase = mixinErrorState(class {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n});\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputBase {\n    constructor(_elementRef, _platform, \n    /** @docs-private */\n    ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    const el = event.target;\n                    // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n                    // indicate different things. If the value is 0, it means that the caret is at the start\n                    // of the input, whereas a value of `null` means that the input doesn't support\n                    // manipulating the selection range. Inputs that don't support setting the selection range\n                    // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n                    // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n                    if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        this._isInFormField = !!_formField;\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() { return this._id; }\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Input type of the element. */\n    get type() { return this._type; }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._inputValueAccessor.value; }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() { return this._readonly; }\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder ?\n                element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatInput.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 9, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"data-placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-invalid\", ctx.empty && ctx.required ? null : ctx.errorState)(\"aria-required\", ctx.required);\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"] }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    userAriaDescribedBy: [{ type: Input, args: ['aria-describedby',] }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    // At the time of writing, we have a lot of customer tests that look up the input based on its\n                    // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                    // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                    '[attr.data-placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    // Only mark the input as invalid for assistive technology if it has a value since the\n                    // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                    '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n                    '[attr.aria-required]': 'required'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], userAriaDescribedBy: [{\n            type: Input,\n            args: ['aria-describedby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵfac = function MatInputModule_Factory(t) { return new (t || MatInputModule)(); };\nMatInputModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n            MatCommonModule,\n        ], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput, MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule,\n        MatCommonModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule, MatInput, MatTextareaAutosize]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, Input, ContentChildren, ElementRef, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function (a0) { return { enterDuration: a0 }; };\nconst _c2 = [\"*\"];\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nclass MatRadioChange {\n    constructor(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\n/**\n * Base class with all of the `MatRadioGroup` functionality.\n * @docs-private\n */\nclass _MatRadioGroupBase {\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() { return this._selected; }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\n_MatRadioGroupBase.ɵfac = function _MatRadioGroupBase_Factory(t) { return new (t || _MatRadioGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatRadioGroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatRadioGroupBase, inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" } });\n_MatRadioGroupBase.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n_MatRadioGroupBase.propDecorators = {\n    change: [{ type: Output }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatRadioGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup extends _MatRadioGroupBase {\n}\nMatRadioGroup.ɵfac = /*@__PURE__*/ function () { let ɵMatRadioGroup_BaseFactory; return function MatRadioGroup_Factory(t) { return (ɵMatRadioGroup_BaseFactory || (ɵMatRadioGroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRadioGroup)))(t || MatRadioGroup); }; }();\nMatRadioGroup.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n            { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatRadioGroup.propDecorators = {\n    _radios: [{ type: ContentChildren, args: [forwardRef(() => MatRadioButton), { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [\n                    MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                    { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                ],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], null, { _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatRadioButton), { descendants: true }]\n        }] }); })();\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * @docs-private\n */\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, animationMode, _providerOverride, tabIndex) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        if (tabIndex) {\n            this.tabIndex = coerceNumberProperty(tabIndex, 0);\n        }\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n    /** Whether this radio button is checked. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() { return this._value; }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        // As per Material design specifications the selection control radio should use the accent color\n        // palette by default. https://material.io/guidelines/components/selection-controls.html\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    set color(newValue) { this._color = newValue; }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Focuses the radio button. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            if (this.checked) {\n                this.radioGroup.selected = this;\n            }\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Triggered when the radio button receives an interaction from the user. */\n    _onInputInteraction(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        if (!this.checked && !this.disabled) {\n            const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n            this.checked = true;\n            this._emitChangeEvent();\n            if (this.radioGroup) {\n                this.radioGroup._controlValueAccessorChangeFn(this.value);\n                if (groupValueChanged) {\n                    this.radioGroup._emitChangeEvent();\n                }\n            }\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(_MatRadioGroupBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(String), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(String)); };\n_MatRadioButtonBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatRadioButtonBase.ctorParameters = () => [\n    { type: _MatRadioGroupBase },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String },\n    { type: undefined },\n    { type: String }\n];\n_MatRadioButtonBase.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatRadioGroupBase }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String }, { type: undefined }, { type: String }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex);\n    }\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_GROUP, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatRadioButton.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", null)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._noopAnimations)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 20, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵelement(3, \"span\", 3);\n        ɵngcc0.ɵɵelement(4, \"span\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputInteraction($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"span\", 7);\n        ɵngcc0.ɵɵelement(8, \"span\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"span\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction1(18, _c1, ctx._noopAnimations ? 0 : 150));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-ripple,.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-ripple{outline:solid 3px}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_GROUP,] }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputInteraction($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_noopAnimations',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be removed since it causes some a11y issues (see #21266).\n                    '[attr.tabindex]': 'null',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-ripple,.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-ripple{outline:solid 3px}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_GROUP]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵfac = function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); };\nMatRadioModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup, MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup, MatRadioButton, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\n\n//# sourceMappingURL=radio.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, ErrorStateMatcher, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormField, MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/material/form-field';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder);\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue);\n} }\nfunction MatSelect_span_5_ng_content_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_ng_content_2_Template, 1, 0, \"ng-content\", 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14, 15);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\")(\"aria-multiselectable\", ctx_r4.multiple)(\"aria-label\", ctx_r4.ariaLabel || null)(\"aria-labelledby\", ctx_r4._getPanelAriaLabelledby());\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel. */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis. */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(class {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger',\n                providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }]\n            }]\n    }], null, null); })();\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        var _a, _b, _c;\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `ariar-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = ((_a = this._defaultOptions) === null || _a === void 0 ? void 0 : _a.overlayPanelClass) || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._required = false;\n        this._multiple = false;\n        this._disableOptionCentering = (_c = (_b = this._defaultOptions) === null || _b === void 0 ? void 0 : _b.disableOptionCentering) !== null && _c !== void 0 ? _c : false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if ((_defaultOptions === null || _defaultOptions === void 0 ? void 0 : _defaultOptions.typeaheadDebounceInterval) != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() { return this._placeholder; }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() { return this._value; }\n    set value(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() { return this._id; }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        var _a;\n        return !this._panelOpen && !this.disabled && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        const labelExpression = (labelId ? labelId + ' ' : '');\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n}\n_MatSelectBase.ɵfac = function _MatSelectBase_Factory(t) { return new (t || _MatSelectBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\n_MatSelectBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatSelectBase, viewQuery: function _MatSelectBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._overlayDir = _t.first);\n    } }, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatSelectBase.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\n_MatSelectBase.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    _overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    panelClass: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatSelectBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc6.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], _overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], panelClass: [{\n            type: Input\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler.change().pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize =\n                parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize && this._overlayDir.overlayRef &&\n                    this._overlayDir.overlayRef.overlayElement) {\n                    this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this._overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this._overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this._overlayDir.offsetX = Math.round(offsetX);\n        this._overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset =\n                Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n}\nMatSelect.ɵfac = /*@__PURE__*/ function () { let ɵMatSelect_BaseFactory; return function MatSelect_Factory(t) { return (ɵMatSelect_BaseFactory || (ɵMatSelect_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSelect)))(t || MatSelect); }; }();\nMatSelect.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, hostAttrs: [\"role\", \"combobox\", \"aria-autocomplete\", \"none\", \"aria-haspopup\", \"true\", 1, \"mat-select\"], hostVars: 20, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty)(\"mat-select-multiple\", ctx.multiple);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, decls: 9, vars: 12, consts: [[\"cdk-overlay-origin\", \"\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder mat-select-min-line\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\", \"mat-select-min-line\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [\"class\", \"mat-select-min-line\", 4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-min-line\"], [1, \"mat-select-panel-wrap\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 14, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"aria-owns\", ctx.panelOpen ? ctx.id + \"-panel\" : null);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._valueId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayPanelClass\", ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc7.CdkOverlayOrigin, ɵngcc8.NgSwitch, ɵngcc8.NgSwitchCase, ɵngcc7.CdkConnectedOverlay, ɵngcc8.NgSwitchDefault, ɵngcc8.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\nMatSelect.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    customTrigger: [{ type: ContentChild, args: [MAT_SELECT_TRIGGER,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'combobox',\n                    'aria-autocomplete': 'none',\n                    // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                    // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                    // value. At some point we should try to switch it back to being `listbox`.\n                    'aria-haspopup': 'true',\n                    'class': 'mat-select',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                    '[attr.aria-expanded]': 'panelOpen',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    '[class.mat-select-multiple]': 'multiple',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"]\n            }]\n    }], null, { options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MAT_SELECT_TRIGGER]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵfac = function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); };\nMatSelectModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect, MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule,\n        MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, _MatSelectBase, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function (a0) { return { enterDuration: a0 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nconst _MatSlideToggleBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}))));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.color = this.defaultColor = defaults.color || 'accent';\n        this._noopAnimations = animationMode === 'NoopAnimations';\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 19, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction1(17, _c3, ctx._noopAnimations ? 0 : 150));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_noopAnimations'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = /*@__PURE__*/ function () { let ɵMatSlideToggleRequiredValidator_BaseFactory; return function MatSlideToggleRequiredValidator_Factory(t) { return (ɵMatSlideToggleRequiredValidator_BaseFactory || (ɵMatSlideToggleRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator)))(t || MatSlideToggleRequiredValidator); }; }();\nMatSlideToggleRequiredValidator.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); };\n_MatSlideToggleRequiredValidatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵfac = function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); };\nMatSlideToggleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","<div class=\"row\">\n  <div class=\"col-lg-12\">\n    <nb-card>\n      <nb-card-header>Hero Buttons</nb-card-header>\n      <nb-card-body>\n        <div class=\"buttons-row\">\n          <button *ngFor=\"let status of statuses\" nbButton matRipple [status]=\"status\" hero>\n            {{ status }}\n          </button>\n          <button disabled nbButton matRipple hero>\n            disabled\n          </button>\n        </div>\n      </nb-card-body>\n    </nb-card>\n\n    <nb-card>\n      <nb-card-header>Default Buttons</nb-card-header>\n      <nb-card-body>\n        <div class=\"buttons-row\">\n          <button *ngFor=\"let status of statuses\" nbButton matRipple [status]=\"status\">\n            {{ status }}\n          </button>\n          <button disabled nbButton matRipple>\n            disabled\n          </button>\n        </div>\n      </nb-card-body>\n    </nb-card>\n\n    <nb-card>\n      <nb-card-header>Outline Buttons</nb-card-header>\n      <nb-card-body>\n        <div class=\"buttons-row\">\n          <button *ngFor=\"let status of statuses\" nbButton matRipple [status]=\"status\" outline>\n            {{ status }}\n          </button>\n          <button disabled nbButton matRipple outline>\n            disabled\n          </button>\n        </div>\n      </nb-card-body>\n    </nb-card>\n\n    <nb-card>\n      <nb-card-header>Ghost Buttons</nb-card-header>\n      <nb-card-body>\n        <div class=\"buttons-row\">\n          <button *ngFor=\"let status of statuses\" nbButton matRipple [status]=\"status\" ghost>\n            {{ status }}\n          </button>\n          <button disabled nbButton matRipple outline>\n            disabled\n          </button>\n        </div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n\n  <div class=\"col-md-12 col-lg-12 col-xxxl-6\">\n    <nb-card>\n      <nb-card-header>Button shapes</nb-card-header>\n      <nb-card-body>\n        <div class=\"buttons-row\">\n          <button *ngFor=\"let shape of shapes\" nbButton matRipple [shape]=\"shape\">\n            {{ shape }}\n          </button>\n        </div>\n      </nb-card-body>\n    </nb-card>\n\n    <nb-card>\n      <nb-card-header>Button sizes</nb-card-header>\n      <nb-card-body>\n        <div class=\"buttons-row\">\n          <button *ngFor=\"let size of sizes\" nbButton matRipple [size]=\"size\">\n            {{ size }}\n          </button>\n        </div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n\n  <div class=\"col-md-12 col-lg-12 col-xxxl-6\">\n    <nb-card class=\"actions-card\">\n      <nb-card-header>Action Groups</nb-card-header>\n      <nb-card-body>\n        <nb-actions size=\"medium\">\n          <nb-action matRipple icon=\"menu-outline\"></nb-action>\n          <nb-action matRipple icon=\"search-outline\"></nb-action>\n          <nb-action matRipple icon=\"email-outline\"></nb-action>\n          <nb-action disabled icon=\"bell-outline\"></nb-action><nb-action>\n          <nb-user matRipple name=\"Han Solo\"></nb-user>\n        </nb-action>\n          <nb-action matRipple icon=\"settings-2-outline\"></nb-action>\n        </nb-actions>\n      </nb-card-body>\n    </nb-card>\n\n    <nb-card>\n      <nb-card-body>\n        <nb-actions size=\"medium\" fullWidth>\n          <nb-action matRipple>\n            <nb-icon class=\"action-icon\" icon=\"pause-circle-outline\"></nb-icon>\n            <span>Pause</span>\n          </nb-action>\n          <nb-action matRipple>\n            <nb-icon class=\"action-icon\" icon=\"list-outline\"></nb-icon>\n            <span>Logs</span>\n          </nb-action>\n          <nb-action matRipple>\n            <nb-icon class=\"action-icon\" icon=\"search-outline\"></nb-icon>\n            <span>Search</span>\n          </nb-action>\n          <nb-action matRipple>\n            <nb-icon class=\"action-icon\" icon=\"settings-2-outline\"></nb-icon>\n            <span>Setup</span>\n          </nb-action>\n        </nb-actions>\n      </nb-card-body>\n    </nb-card>\n\n    <nb-card *ngIf=\"materialTheme$ | async\">\n      <nb-card-body>\n        <ngx-material-buttons></ngx-material-buttons>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { NbComponentShape, NbComponentSize, NbComponentStatus, NbThemeService } from '@nebular/theme';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'ngx-buttons',\n  styleUrls: ['./buttons.component.scss'],\n  templateUrl: './buttons.component.html',\n})\nexport class ButtonsComponent {\n  public constructor(private readonly themeService: NbThemeService) {\n    this.materialTheme$ = this.themeService.onThemeChange()\n      .pipe(map(theme => {\n        const themeName: string = theme?.name || '';\n        return themeName.startsWith('material');\n      }));\n  }\n\n  public readonly materialTheme$: Observable<boolean>;\n\n  public readonly statuses: NbComponentStatus[] = [ 'primary', 'success', 'info', 'warning', 'danger' ];\n  public readonly shapes: NbComponentShape[] = [ 'rectangle', 'semi-round', 'round' ];\n  public readonly sizes: NbComponentSize[] = [ 'tiny', 'small', 'medium', 'large', 'giant' ];\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-material-buttons',\n  templateUrl: './material-buttons.component.html',\n  styleUrls: ['./material-buttons.component.scss'],\n})\nexport class MaterialButtonsComponent {}\n","<button mat-button color=\"primary\">Basic</button>\n<button mat-raised-button color=\"primary\">Raised</button>\n<button mat-stroked-button color=\"primary\">Stroked</button>\n<button mat-flat-button color=\"primary\">Flat</button>\n<button mat-fab color=\"primary\">FAB</button>\n<mat-button-toggle-group>\n  <mat-button-toggle value=\"left\" [checked]=\"true\">Toggle left</mat-button-toggle>\n  <mat-button-toggle value=\"right\">Toggle right</mat-button-toggle>\n</mat-button-toggle-group>","import { Component } from '@angular/core';\nimport { NbDateService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-datepicker',\n  templateUrl: 'datepicker.component.html',\n  styleUrls: ['datepicker.component.scss'],\n})\nexport class DatepickerComponent {\n\n  min: Date;\n  max: Date;\n\n  constructor(protected dateService: NbDateService<Date>) {\n    this.min = this.dateService.addDay(this.dateService.today(), -5);\n    this.max = this.dateService.addDay(this.dateService.today(), 5);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-12 col-lg-4 col-xxxl-4\">\n    <nb-card>\n      <nb-card-header>Common Datepicker</nb-card-header>\n      <nb-card-body>\n        <input nbInput\n               placeholder=\"Form Picker\"\n               [nbDatepicker]=\"formpicker\">\n        <nb-datepicker #formpicker></nb-datepicker>\n      </nb-card-body>\n    </nb-card>\n  </div>\n\n  <div class=\"col-md-12 col-lg-4 col-xxxl-4\">\n    <nb-card>\n      <nb-card-header>Datepicker With Range</nb-card-header>\n      <nb-card-body>\n        <input nbInput placeholder=\"Range Picker\" [nbDatepicker]=\"rangepicker\">\n        <nb-rangepicker #rangepicker></nb-rangepicker>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-md-12 col-lg-4 col-xxxl-4\">\n    <nb-card>\n      <nb-card-header>Datepicker With Disabled Min Max Values</nb-card-header>\n      <nb-card-body>\n        <input nbInput placeholder=\"Min Max Picker\" [nbDatepicker]=\"picker\">\n        <nb-datepicker #picker [min]=\"min\" [max]=\"max\"></nb-datepicker>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","<div class=\"row\">\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Default Inputs</nb-card-header>\n      <nb-card-body>\n        <input type=\"text\" nbInput fullWidth placeholder=\"Project\">\n        <div class=\"full-name-inputs\">\n          <input type=\"text\" nbInput fullWidth placeholder=\"Nick\">\n          <input type=\"text\" nbInput fullWidth placeholder=\"Last Name\">\n        </div>\n        <input type=\"password\" nbInput fullWidth placeholder=\"Password\">\n        <input type=\"text\" nbInput fullWidth shape=\"rectangle\" placeholder=\"Rectangle border\">\n        <ng-container *ngIf=\"!(materialTheme$ | async)\">\n          <input type=\"text\" nbInput fullWidth shape=\"semi-round\" placeholder=\"Semi-round border\">\n          <input type=\"text\" nbInput fullWidth shape=\"round\" placeholder=\"Rounded border\">\n        </ng-container>\n        <input type=\"text\" nbInput fullWidth placeholder=\"Disabled input\" disabled/>\n        <textarea rows=\"5\" nbInput fullWidth shape=\"round\"  placeholder=\"Text Area\"></textarea>\n        <input type=\"text\" nbInput fullWidth fieldSize=\"small\"  placeholder=\"Small Input\">\n        <input type=\"text\" nbInput fullWidth fieldSize=\"medium\"  placeholder=\"Medium Input\">\n        <input type=\"text\" nbInput fullWidth fieldSize=\"large\"  placeholder=\"Large Input\">\n      </nb-card-body>\n    </nb-card>\n  </div>\n\n  <div class=\"col-lg-6\">\n\n    <nb-card>\n      <nb-card-header>Select</nb-card-header>\n      <nb-card-body>\n        <nb-select matRipple selected=\"1\">\n          <nb-option matRipple value=\"1\">Option 1</nb-option>\n          <nb-option matRipple value=\"2\">Option 2</nb-option>\n        </nb-select>\n      </nb-card-body>\n    </nb-card>\n\n    <nb-card>\n      <nb-card-header>Validation States</nb-card-header>\n      <nb-card-body>\n        <input type=\"text\" nbInput fullWidth status=\"info\"  placeholder=\"Input with Info\">\n        <input type=\"text\" nbInput fullWidth status=\"success\"  placeholder=\"Warning Input\">\n        <input type=\"text\" nbInput fullWidth status=\"warning\"  placeholder=\"Danger Input\">\n        <input type=\"text\" nbInput fullWidth status=\"danger\" placeholder=\"Danger Input\">\n        <input type=\"text\" nbInput fullWidth status=\"primary\"  placeholder=\"Input with Primary\">\n        <div class=\"validation-checkboxes\">\n          <nb-checkbox status=\"success\">Success Checkbox</nb-checkbox>\n          <nb-checkbox status=\"warning\">Warning Checkbox</nb-checkbox>\n          <nb-checkbox status=\"danger\">Danger Checkbox</nb-checkbox>\n        </div>\n      </nb-card-body>\n    </nb-card>\n\n    <nb-card>\n      <nb-card-header>Checkboxes & Radios</nb-card-header>\n      <nb-card-body class=\"checkbox-radio\">\n        <div class=\"demo-items\">\n          <nb-checkbox>Checkbox 1</nb-checkbox>\n          <nb-checkbox checked>Checkbox 2</nb-checkbox>\n        </div>\n        <div class=\"demo-items\">\n          <nb-radio-group [(value)]=\"radioGroupValue\">\n            <nb-radio\n              [value]=\"'This is value 1'\">\n              Radio 1\n            </nb-radio>\n            <nb-radio\n              [value]=\"'This is value 2'\">\n              Radio 2\n            </nb-radio>\n            <nb-radio\n              [value]=\"'This is value 3'\">\n              Radio 3\n            </nb-radio>\n          </nb-radio-group>\n        </div>\n        <div class=\"demo-items\">\n          <nb-checkbox disabled>Disabled Checkbox</nb-checkbox>\n          <nb-radio-group disabled>\n            <nb-radio\n              [value]=\"'Disabled Value'\">\n              Disabled Radio\n            </nb-radio>\n          </nb-radio-group>\n        </div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n<div *ngIf=\"showMaterialInputs\" class=\"row\">\n  <div class=\"col-lg-12\">\n    <ngx-material-inputs></ngx-material-inputs>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'ngx-form-inputs',\n  styleUrls: ['./form-inputs.component.scss'],\n  templateUrl: './form-inputs.component.html',\n})\nexport class FormInputsComponent implements OnInit {\n  public constructor(private readonly themeService: NbThemeService) {\n  }\n\n  public materialTheme$: Observable<boolean>;\n  public starRate: number = 2;\n  public heartRate: number = 4;\n  public radioGroupValue: string = 'This is value 2';\n  public showMaterialInputs = false;\n\n  ngOnInit() {\n    this.materialTheme$ = this.themeService.onThemeChange()\n    .pipe(tap(theme => {\n      const themeName: string = theme?.name || '';\n      this.showMaterialInputs = themeName.startsWith('material');\n    }));\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-material-inputs',\n  templateUrl: './material-inputs.component.html',\n  styleUrls: ['./material-inputs.component.scss'],\n})\nexport class MaterialInputsComponent {}\n","<nb-card>\n  <nb-card-header>Angular Material</nb-card-header>\n  <nb-card-body>\n    <div class=\"row\">\n      <div class=\"col-lg-6\">\n        <mat-form-field class=\"input-example\">\n          <mat-label>Input</mat-label>\n          <input matInput autocomplete=\"off\">\n          <mat-hint>hint</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field class=\"input-example\">\n          <mat-label>Select</mat-label>\n          <mat-select>\n            <mat-option value=\"1\">Option 1</mat-option>\n            <mat-option value=\"2\">Option 2</mat-option>\n            <mat-option value=\"3\">Option 3</mat-option>\n          </mat-select>\n          <mat-hint>hint</mat-hint>\n        </mat-form-field>\n    \n        <mat-form-field class=\"input-example\">\n          <mat-label>Datepicker</mat-label>\n          <input matInput autocomplete=\"off\" [matDatepicker]=\"picker\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n          <mat-hint>hint</mat-hint>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-6\">\n        <mat-form-field class=\"input-example\">\n          <mat-label>Textarea</mat-label>\n          <textarea matInput autocomplete=\"off\"></textarea>\n          <mat-hint>hint</mat-hint>\n        </mat-form-field>\n\n        <div class=\"input-example\">\n          <label>Checkbox</label>\n          <mat-checkbox color=\"primary\" [checked]=\"true\"></mat-checkbox>\n        </div>\n    \n        <div class=\"input-example\">\n          <label>Toggle</label>\n          <mat-slide-toggle color=\"primary\" [checked]=\"true\"></mat-slide-toggle>\n        </div>\n    \n        <div class=\"input-example\">\n          <label>Radio</label>\n          <mat-radio-group color=\"primary\">\n            <mat-radio-button value=\"1\" [checked]=\"true\">Option 1</mat-radio-button>\n            <mat-radio-button value=\"2\">Option 2</mat-radio-button>\n            <mat-radio-button value=\"3\">Option 3</mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-form-layouts',\n  styleUrls: ['./form-layouts.component.scss'],\n  templateUrl: './form-layouts.component.html',\n})\nexport class FormLayoutsComponent {\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <nb-card class=\"inline-form-card\">\n      <nb-card-header>Inline form</nb-card-header>\n      <nb-card-body>\n        <form class=\"form-inline\">\n          <input type=\"text\" nbInput fullWidth placeholder=\"Jane Doe\">\n          <input type=\"text\" nbInput fullWidth placeholder=\"Email\">\n          <nb-checkbox>Remember me</nb-checkbox>\n          <button type=\"submit\" nbButton status=\"primary\">Submit</button>\n        </form>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-6\">\n    <nb-card>\n      <nb-card-header>Using the Grid</nb-card-header>\n      <nb-card-body>\n        <form>\n          <div class=\"form-group row\">\n            <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label\">Email</label>\n            <div class=\"col-sm-9\">\n              <input type=\"email\" nbInput fullWidth id=\"inputEmail1\" placeholder=\"Email\">\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"inputPassword2\" class=\"label col-sm-3 col-form-label\">Password</label>\n            <div class=\"col-sm-9\">\n              <input type=\"password\" nbInput fullWidth id=\"inputPassword2\" placeholder=\"Password\">\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label class=\"col-sm-3 label\">Radios</label>\n            <div class=\"col-sm-9\">\n              <nb-radio-group>\n                <nb-radio>Option 1</nb-radio>\n                <nb-radio>Option 2</nb-radio>\n                <nb-radio disabled>Disabled Option</nb-radio>\n              </nb-radio-group>\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <div class=\"offset-sm-3 col-sm-9\">\n              <button type=\"submit\" nbButton status=\"primary\">Sign in</button>\n            </div>\n          </div>\n        </form>\n      </nb-card-body>\n    </nb-card>\n\n    <nb-card>\n      <nb-card-header>Form without labels</nb-card-header>\n      <nb-card-body>\n        <form>\n          <div class=\"form-group\">\n            <input type=\"text\" nbInput fullWidth placeholder=\"Recipients\">\n          </div>\n          <div class=\"form-group\">\n            <input type=\"text\" nbInput fullWidth placeholder=\"Subject\">\n          </div>\n          <div class=\"form-group\">\n            <textarea nbInput placeholder=\"Message\"></textarea>\n          </div>\n          <button type=\"submit\" nbButton status=\"success\">Send</button>\n        </form>\n      </nb-card-body>\n    </nb-card>\n  </div>\n\n  <div class=\"col-md-6\">\n    <nb-card>\n      <nb-card-header>Basic form</nb-card-header>\n      <nb-card-body>\n        <form>\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\" class=\"label\">Email address</label>\n            <input type=\"email\" nbInput fullWidth id=\"exampleInputEmail1\" placeholder=\"Email\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"exampleInputPassword1\" class=\"label\">Password</label>\n            <input type=\"password\" nbInput fullWidth id=\"exampleInputPassword1\" placeholder=\"Password\">\n          </div>\n          <div class=\"form-group\">\n            <nb-checkbox>Check me out</nb-checkbox>\n          </div>\n          <button type=\"submit\" nbButton status=\"danger\">Submit</button>\n        </form>\n      </nb-card-body>\n    </nb-card>\n\n    <nb-card>\n      <nb-card-header>Block form</nb-card-header>\n      <nb-card-body>\n        <div class=\"row\">\n          <div class=\"col-sm-6\">\n            <div class=\"form-group\">\n              <label for=\"inputFirstName\" class=\"label\">First Name</label>\n              <input type=\"text\" nbInput fullWidth id=\"inputFirstName\" placeholder=\"First Name\">\n            </div>\n          </div>\n          <div class=\"col-sm-6\">\n            <div class=\"form-group\">\n              <label for=\"inputLastName\" class=\"label\">Last Name</label>\n              <input type=\"text\" nbInput fullWidth id=\"inputLastName\" placeholder=\"Last Name\">\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-6\">\n            <div class=\"form-group\">\n              <label for=\"inputEmail\" class=\"label\">Email</label>\n              <input type=\"email\" nbInput fullWidth id=\"inputEmail\" placeholder=\"Email\">\n            </div>\n          </div>\n          <div class=\"col-sm-6\">\n            <div class=\"form-group\">\n              <label for=\"inputWebsite\" class=\"label\">Website</label>\n              <input type=\"text\" nbInput fullWidth id=\"inputWebsite\" placeholder=\"Website\">\n            </div>\n          </div>\n        </div>\n        <button type=\"submit\" nbButton>Submit</button>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-6\">\n    <nb-card>\n      <nb-card-header>Horizontal form</nb-card-header>\n      <nb-card-body>\n        <form class=\"form-horizontal\">\n          <div class=\"form-group row\">\n            <label for=\"inputEmail3\" class=\"label col-sm-3 form-control-label\">Email</label>\n            <div class=\"col-sm-9\">\n              <input type=\"email\" nbInput fullWidth id=\"inputEmail3\" placeholder=\"Email\">\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"inputPassword3\" class=\"label col-sm-3 form-control-label\">Password</label>\n            <div class=\"col-sm-9\">\n              <input type=\"password\" nbInput fullWidth id=\"inputPassword3\" placeholder=\"Password\">\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <div class=\"offset-sm-3 col-sm-9\">\n              <div class=\"checkbox\">\n                <nb-checkbox>Remember me</nb-checkbox>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <div class=\"offset-sm-3 col-sm-9\">\n              <button type=\"submit\" nbButton status=\"warning\">Sign in</button>\n            </div>\n          </div>\n        </form>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FormsComponent } from './forms.component';\nimport { FormInputsComponent } from './form-inputs/form-inputs.component';\nimport { FormLayoutsComponent } from './form-layouts/form-layouts.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport { ButtonsComponent } from './buttons/buttons.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormsComponent,\n    children: [\n      {\n        path: 'inputs',\n        component: FormInputsComponent,\n      },\n      {\n        path: 'layouts',\n        component: FormLayoutsComponent,\n      },\n      {\n        path: 'layouts',\n        component: FormLayoutsComponent,\n      },\n      {\n        path: 'buttons',\n        component: ButtonsComponent,\n      },\n      {\n        path: 'datepicker',\n        component: DatepickerComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n  ],\n  exports: [\n    RouterModule,\n  ],\n})\nexport class FormsRoutingModule {\n}\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-form-elements',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class FormsComponent {\n}\n","import { NgModule } from '@angular/core';\nimport {\n  NbActionsModule,\n  NbButtonModule,\n  NbCardModule,\n  NbCheckboxModule,\n  NbDatepickerModule, NbIconModule,\n  NbInputModule,\n  NbRadioModule,\n  NbSelectModule,\n  NbUserModule,\n} from '@nebular/theme';\n\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { FormsRoutingModule } from './forms-routing.module';\nimport { FormsComponent } from './forms.component';\nimport { FormInputsComponent } from './form-inputs/form-inputs.component';\nimport { MaterialInputsComponent } from './form-inputs/material-inputs/material-inputs.component';\nimport { FormLayoutsComponent } from './form-layouts/form-layouts.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport { ButtonsComponent } from './buttons/buttons.component';\nimport { MaterialButtonsComponent } from './buttons/material-buttons/material-buttons.component';\nimport { FormsModule as ngFormsModule } from '@angular/forms';\n\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nconst materialModules = [\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatNativeDateModule,\n  MatDatepickerModule,\n  MatCheckboxModule,\n  MatSlideToggleModule,\n  MatRadioModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n];\n\n@NgModule({\n  imports: [\n    ThemeModule,\n    NbInputModule,\n    NbCardModule,\n    NbButtonModule,\n    NbActionsModule,\n    NbUserModule,\n    NbCheckboxModule,\n    NbRadioModule,\n    NbDatepickerModule,\n    FormsRoutingModule,\n    NbSelectModule,\n    NbIconModule,\n    ngFormsModule,\n    ...materialModules,\n  ],\n  declarations: [\n    FormsComponent,\n    ButtonsComponent,\n    FormInputsComponent,\n    FormLayoutsComponent,\n    DatepickerComponent,\n    MaterialInputsComponent,\n    MaterialButtonsComponent,\n  ],\n})\nexport class FormsModule { }\n"]}